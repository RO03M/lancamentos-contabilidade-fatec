{"version":3,"sources":["pages/Launches/TextToList/index.module.css","pages/Resume/index.module.css","actions/AppActions.js","data.js","pages/Launches/Board/Modal/index.js","pages/Launches/Board/index.js","pages/Launches/Modal/index.js","pages/Launches/Table/index.js","pages/Launches/TextToList/index.js","pages/Launches/index.js","pages/Reasons/Card/index.js","pages/Reasons/index.js","pages/BPDRE/Container/index.js","pages/BPDRE/List/Active/index.js","pages/BPDRE/List/Passive/index.js","pages/BPDRE/List/Results/index.js","pages/BPDRE/List/index.js","pages/BPDRE/index.js","pages/Resume/index.js","pages/index.js","App.js","reportWebVitals.js","reducers/AppReducer.js","reducers/index.js","index.js"],"names":["module","exports","UpdateResumeData","data","type","payload","LEDGER_REFS","Modal","props","onClose","id","item","registerType","ledgerType","debt","credit","other","useState","_id","_item","SetItem","_registerType","SetRegisterType","_ledgerType","SetLedgerType","_debt","SetDebt","_credit","SetCredit","dispatch","useDispatch","Dialog","onBackdropClick","DialogTitle","DialogContent","className","sx","minWidth","TextField","variant","label","value","onChange","e","target","FormControl","InputLabel","Select","MenuItem","map","index","DialogActions","Button","color","onClick","Board","modal","SetModal","TableRow","TableCell","style","verticalAlign","open","IconButton","boardCount","SetBoardCount","useSelector","store","AppReducer","ClearStates","useEffect","lastId","sort","a","b","length","fullWidth","onSubmit","preventDefault","AddData","Table","React","forwardRef","ref","boardList","SetBoardList","useImperativeHandle","OpenModal","elements","i","push","height","width","TableContainer","component","Paper","TableHead","TableBody","TextToList","text","SetText","launchList","styles","textInput","multiline","rows","split","row","words","charAt","toUpperCase","substr","join","replace","parseFloat","AddDataArray","Launches","Card","title","debts","credits","expanded","SetExpanded","raised","padding","Typography","align","fontSize","fontWeight","CardActions","display","justifyContent","Collapse","in","timeout","sum","Reasons","reasonList","SetReasonList","tempReasonsList","x","isNaN","cards","Object","entries","key","Container","children","Tooltip","placement","arrow","Active","list","SetList","caixa","balance","bancos","clientes","poupanca","adiantamentosFuncionarios","adiantamentosFornecedor","mercadoriaRevenda","segurosVencer","assinaturasRevistas","titulosReceber","clientesLP","participacaoFundoInvestimentos","computadoresPerifericos","equipamentosTelefonicos","maquinasEquipamentos","moveisUtensilios","predios","prediosConstrucao","terrenos","veiculos","depreciacaoAcumulada","pesquisaDevProdutos","assign","disponivel","creditos","estoques","despesasAntecipadas","outrosValBens","realizavelLongoPrazo","investimentos","imobilizado","intangivel","circulante","naoCirculantes","ativo","ativoCirculante","ativoImobilizado","Passive","venda","Math","abs","vendasCaneladas","deducoes","despesasVendas","despesasAdmin","resultadoFinanceiroLiquido","receitaLiquida","lucroBruto","resultadoOperacional","resultadoAntesImposto","lucroPrejuizoExercicio","salPagar","fornecedores","bancosMovimento","emprestimosBancarios","assinaturasAnuidade","segurosPagar","capitalSocial","reservasCapital","reservasReavaliacao","reservasLucro","lucroPrejuizoAcumulado","obrigacoes","obrigacoesLongoPrazo","capital","reservas","lucroPrejuizo","naoCirculante","patrimonioLiquido","passive","passivo","passivoCirculante","Results","icmsVendas","cofins","pis","devolucaoVendas","custosMercadoriasVendidas","comissoesVendas","propagandaPublicidade","salariosOrdenados","aluguel","depreciacao","manutencaoReparos","agua","correio","energiaEletrica","seguros","telefone","transportePessoal","proLabore","materialEscritorio","refeicoesLanches","revistasPublicacoes","despesasFinanceiras","receitasFinanceiras","ganhosAlienacaoImobilizado","valorLiquidoBensBaixado","perdasAlienacaoImobilizado","irpj","irpjAdicional","csll","receitasOperacionais","deducoesReceitasVendas","custosMercadorias","receitasNaoOperacionais","despesasNaoOperacionais","impostosContribuicoes","resultadoExercicio","receitas","custos","despesas","receitasDespesasNaoOperacionais","provisaoImpostosContribuicoes","resultado","demonstracaoResultadoExercicio","resultadoImpostoRendaContriSocial","vendas","lucroLiquido","List","margin","elevation","BPDRE","Resume","resumeData","container","CardContent","MainPage","activeTab","SetActiveTab","drawer","SetDrawer","resetDialog","SetResetDialog","history","useHistory","theme","launchesRef","useRef","window","scrollTo","AppBar","position","Toolbar","Tabs","_","flexGrow","indicatorColor","textColor","Tab","role","top","bottom","BottomNavigation","showLabels","BottomNavigationAction","Drawer","anchor","disableScrollLock","float","ListItem","button","ListItemIcon","ListItemText","primary","onChangeIndex","marginTop","Fab","current","zIndex","right","size","hidden","transform","left","lightPalette","darkPalette","main","dark","light","contrastText","App","themeMode","useMemo","createTheme","palette","mode","path","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","JSON","parse","localStorage","getItem","OrderByItem","SaveData","dataParam","resumeParam","setItem","stringify","combineReducers","state","action","dataNoRepeat","filter","newData","removeItem","ReactDOM","render","createStore","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.a5942d21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"TextToList_textInput__6stHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Resume_container__1uHGh\"};","export const AddData = data => ({\r\n    type: \"AddData\",\r\n    payload: data\r\n});\r\n\r\nexport const Reset = () => ({\r\n    type: \"Reset\"\r\n});\r\n\r\nexport const AddDataArray = data => ({\r\n    type: \"AddDataArray\",\r\n    payload: data\r\n});\r\n\r\nexport const UpdateData = data => ({\r\n    type: \"UpdateData\",\r\n    payload: data\r\n});\r\n\r\nexport const DeleteData = data => ({\r\n    type: \"DeleteData\",\r\n    id: data\r\n});\r\n\r\nexport const UpdateResumeData = data => ({\r\n    type: \"UpdateResumeData\",\r\n    payload: data\r\n});\r\n\r\nexport const SwitchTheme = () => ({\r\n    type: \"SwitchTheme\"\r\n});\r\n","export const LEDGER_REFS = [\r\n    \"Adiantamento a Fornecedor\", \r\n    \"Adiantamentos a Funcionários\", \r\n    \"Água\", \r\n    \"Aluguel\", \r\n    \"Assinaturas de Revistas\", \r\n    \"Assinaturas e Anuidades a Pagar\", \r\n    \"Bancos\", \r\n    \"Bancos conta Movimento\", \r\n    \"Caixa\", \r\n    \"Capital Social\", \r\n    \"Clientes\", \r\n    \"Clientes (LP)\", \r\n    \"Cofins\", \r\n    \"Comissões sobre Vendas\", \r\n    \"Computadores e Periféricos\", \r\n    \"Correio\", \r\n    \"CSLL\", \r\n    \"Custos das Mercadorias Vendidas\", \r\n    \"Depreciação\", \r\n    \"Depreciação Acumulada\", \r\n    \"Despesas Financeiras\", \r\n    \"Devolução de Vendas\", \r\n    \"Empréstimos Bancários\", \r\n    \"Energia Elétrica\", \r\n    \"Equipamentos Telefônicos\", \r\n    \"Fornecedores\", \r\n    \"Ganhos na Alienação do Imobilizado\", \r\n    \"ICMS sobre Vendas\", \r\n    \"IRPJ\", \r\n    \"IRPJ - Adicional\", \r\n    \"Lucro ou Prejuízo Acumulado\", \r\n    \"Manutenção e Reparos\", \r\n    \"Máquinas e Equipamentos\", \r\n    \"Material de Escritório\", \r\n    \"Mercadoria para Revenda\", \r\n    \"Móveis e Utensílios\", \r\n    \"Participação em Fundos de Investimentos\", \r\n    \"Perdas na Alienação do Imobilizado\", \r\n    \"Pesquisa e Desenvolvimento de Produtos\", \r\n    \"Pis\", \r\n    \"Poupança\", \r\n    \"Prédios\", \r\n    \"Prédios em Construção\", \r\n    \"Pró-Labore\", \r\n    \"Propaganda e Publicidade\", \r\n    \"Receita Financeiras\", \r\n    \"Refeições e Lanches\", \r\n    \"Reservas de Capital\", \r\n    \"Reservas de Lucro\", \r\n    \"Reservas de Reavaliação\", \r\n    \"Revistas e Publicações\", \r\n    \"Salários à Pagar\", \r\n    \"Salários e Ordenados\", \r\n    \"Seguros\", \r\n    \"Seguros à Pagar\", \r\n    \"Seguros à Vencer\", \r\n    \"Telefone\", \r\n    \"Terrenos\", \r\n    \"Títulos à Receber\", \r\n    \"Transporte de Pessoal\", \r\n    \"Valor Líquido de Bens Baixado\", \r\n    \"Veículos\", \r\n    \"Venda\", \r\n    \"Vendas Canceladas\"\r\n];\r\n\r\nexport const BPDRE_OBJ = {\r\n    ativo: {\r\n        circulante: {\r\n            key: \"Circulante\",\r\n            disponivel: [\r\n                {key: \"caixa\", value: \"Caixa\"},\r\n                {key: \"bancos\", value: \"Bancos\"}\r\n            ],\r\n            creditos: [\r\n                {key: \"clientes\", value: \"Clientes\"}\r\n            ]\r\n        }\r\n    }\r\n};","import { Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LEDGER_REFS } from \"../../../../data\";\r\nimport { UpdateData } from \"../../../../actions/AppActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Modal = props => {\r\n\r\n    const {\r\n        onClose = () => {},\r\n        id,\r\n        item = \"\",\r\n        registerType = \"\",\r\n        ledgerType = \"\",\r\n        debt = \"\",\r\n        credit = \"\",\r\n        ...other\r\n    } = props;\r\n\r\n    const [_id, SetId] = useState(id);\r\n    const [_item, SetItem] = useState(item);\r\n    const [_registerType, SetRegisterType] = useState(registerType);\r\n    const [_ledgerType, SetLedgerType] = useState(ledgerType);\r\n    const [_debt, SetDebt] = useState(debt);\r\n    const [_credit, SetCredit] = useState(credit);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const UpdateRow = () => {\r\n        let toUpdateData = {\r\n            item: _item,\r\n            registerType: _registerType,\r\n            ledgerType: _ledgerType,\r\n            debt: _debt,\r\n            credit: _credit,\r\n            id: _id\r\n        };\r\n        dispatch(UpdateData(toUpdateData));\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            {...other}\r\n            onBackdropClick={onClose}\r\n            onClose={onClose}\r\n        >\r\n            <DialogTitle>Editando lançamento</DialogTitle>\r\n            <DialogContent \r\n                className=\"flex fdcolumn\"\r\n                sx={{\r\n                    minWidth: \"450px\"\r\n                }}\r\n            >\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    label=\"Item\"\r\n                    value={_item}\r\n                    onChange={e => SetItem(e.target.value)}\r\n                />\r\n\r\n                <FormControl variant=\"filled\" sx={{ minWidth: 120 }}>\r\n                    <InputLabel>D/C</InputLabel>\r\n                    <Select\r\n                        value={_registerType}\r\n                        onChange={e => SetRegisterType(e.target.value)}\r\n                    >\r\n                        <MenuItem value=\"\">Nenhum</MenuItem>\r\n                        <MenuItem value=\"D\">D</MenuItem>\r\n                        <MenuItem value=\"C\">C</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl variant=\"filled\" sx={{ minWidth: 240 }}>\r\n                    <InputLabel>Conta Contábil</InputLabel>\r\n                    <Select\r\n                        value={_ledgerType}\r\n                        onChange={e => SetLedgerType(e.target.value)}\r\n                    >\r\n                        <MenuItem>Nenhum</MenuItem>\r\n                        {LEDGER_REFS.map((value, index) => (\r\n                            <MenuItem \r\n                                key={index}\r\n                                id={`ledger-ref-${index}`}\r\n                                value={value}\r\n                            >{value}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    value={_debt}\r\n                    label=\"Débito\"\r\n                    onChange={e => SetDebt(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    label=\"Crédito\"\r\n                    value={_credit}\r\n                    onChange={e => SetCredit(e.target.value)}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"error\"\r\n                    onClick={onClose}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={UpdateRow}\r\n                >\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FormControl, IconButton, InputLabel, MenuItem, Select, TableCell, TableRow, TextField } from \"@mui/material\";\r\nimport { DeleteData } from \"../../../actions/AppActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Modal from \"./Modal\";\r\n\r\nconst Board = props => {\r\n\r\n    const {\r\n        id,\r\n        item,\r\n        registerType,\r\n        ledgerType,\r\n        debt,\r\n        credit,\r\n        onChange\r\n    } = props;\r\n\r\n    const [modal, SetModal] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    return (\r\n        <TableRow id={id}>\r\n            <TableCell>{item}</TableCell>\r\n            <TableCell>{registerType}</TableCell>\r\n            <TableCell>{ledgerType}</TableCell>\r\n            <TableCell>{debt}</TableCell>\r\n            <TableCell>{credit}</TableCell>\r\n            <TableCell style={{verticalAlign: \"middle\"}}>\r\n                <Modal\r\n                    open={modal}\r\n                    onClose={() => SetModal(false)}\r\n                    id={id}\r\n                    item={item}\r\n                    registerType={registerType}\r\n                    ledgerType={ledgerType}\r\n                    debt={debt}\r\n                    credit={credit}\r\n                />\r\n                <IconButton \r\n                    color=\"info\"\r\n                    onClick={() => SetModal(true)}\r\n                >\r\n                    <EditIcon/>    \r\n                </IconButton>\r\n                <IconButton \r\n                    color=\"error\"\r\n                    onClick={() => dispatch(DeleteData(id))}\r\n                >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default Board;","import { Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField, Button } from \"@mui/material\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { LEDGER_REFS } from \"../../../data\";\r\nimport { AddData } from \"../../../actions/AppActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Modal = props => {\r\n\r\n    const {\r\n        onClose = () => {},\r\n        ...other\r\n    } = props;\r\n\r\n    const [item, SetItem] = useState(\"\");\r\n    const [registerType, SetRegisterType] = useState(\"\");\r\n    const [ledgerType, SetLedgerType] = useState(\"\");\r\n    const [debt, SetDebt] = useState(\"\");\r\n    const [credit, SetCredit] = useState(\"\");\r\n    const [boardCount, SetBoardCount] = useState(0);\r\n\r\n    const data = useSelector(store => store.AppReducer.data);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const AddRow = (e) => {\r\n        e && e.preventDefault();\r\n        let toAddData = {\r\n            item: item,\r\n            registerType: registerType,\r\n            ledgerType: ledgerType,\r\n            debt: debt,\r\n            credit: credit,\r\n            id: boardCount\r\n        };\r\n        dispatch(AddData(toAddData));\r\n        SetBoardCount(boardCount + 1);\r\n        onClose();\r\n        ClearStates();\r\n    }\r\n\r\n    const ClearStates = () => {\r\n        SetItem(\"\");\r\n        SetRegisterType(\"\");\r\n        SetLedgerType(\"\");\r\n        SetDebt(\"\");\r\n        SetCredit(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        let lastId = data.sort((a, b) => {\r\n            if (a?.id < b?.id) return -1;\r\n            else if (a?.id > b?.id) return 1;\r\n            return 0;\r\n        })[data.length - 1]?.id || 0;//Get last id to don't generate already created ids\r\n        SetBoardCount(lastId + 1);\r\n    }, []);\r\n\r\n    return (\r\n        <Dialog\r\n            {...other}\r\n            onBackdropClick={onClose}\r\n            onClose={onClose}\r\n            fullWidth\r\n        >\r\n            <form onSubmit={AddRow}>\r\n                <DialogTitle>Adicionar lançamento</DialogTitle>\r\n                <DialogContent className=\"flex fdcolumn\">\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        label=\"Item\"\r\n                        value={item}\r\n                        onChange={e => SetItem(e.target.value)}\r\n                    />\r\n\r\n                    <FormControl variant=\"filled\" sx={{ minWidth: 120 }}>\r\n                        <InputLabel>D/C</InputLabel>\r\n                        <Select\r\n                            value={registerType}\r\n                            onChange={e => SetRegisterType(e.target.value)}\r\n                        >\r\n                            <MenuItem value=\"\">Nenhum</MenuItem>\r\n                            <MenuItem value=\"D\">D</MenuItem>\r\n                            <MenuItem value=\"C\">C</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl variant=\"filled\" sx={{ minWidth: 240 }}>\r\n                        <InputLabel>Conta Contábil</InputLabel>\r\n                        <Select\r\n                            value={ledgerType}\r\n                            onChange={e => SetLedgerType(e.target.value)}\r\n                        >\r\n                            <MenuItem>Nenhum</MenuItem>\r\n                            {LEDGER_REFS.map((value, index) => (\r\n                                <MenuItem \r\n                                    key={index}\r\n                                    id={`ledger-ref-${index}`}\r\n                                    value={value}\r\n                                >{value}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        value={debt}\r\n                        label=\"Débito\"\r\n                        onChange={e => SetDebt(e.target.value)}\r\n                    />\r\n\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        label=\"Crédito\"\r\n                        value={credit}\r\n                        onChange={e => SetCredit(e.target.value)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"error\"\r\n                        onClick={onClose}\r\n                    >\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Confirmar\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, useImperativeHandle, useState } from \"react\";\r\nimport { IconButton, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Table as MaterialTable } from \"@mui/material\";\r\nimport Board from \"../Board\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"../Modal\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n  \r\nconst columns = [\r\n    {\r\n        field: \"id\",\r\n        headerName: \"ID\"\r\n    },\r\n    {\r\n        field: \"item\",\r\n        headerName: \"Item\"\r\n    },\r\n    {\r\n        field: \"registerType\",\r\n        headerName: \"D/C\"\r\n    },\r\n    {\r\n        field: \"ledgerType\",\r\n        headerName: \"Conta contábil\"\r\n    },\r\n    {\r\n        field: \"debt\",\r\n        headerName: \"Débito\"\r\n    },\r\n    {\r\n        field: \"credit\",\r\n        headerName: \"Crédito\"\r\n    },\r\n    {\r\n        field: \"actions\",\r\n        headerName: \"\"\r\n    }\r\n];\r\n\r\nconst Table = React.forwardRef((props, ref) => {\r\n\r\n    const [boardCount, SetBoardCount] = useState(0);\r\n    const [boardList, SetBoardList] = useState([]);\r\n\r\n    const [modal, SetModal] = useState(false);\r\n    const [rows, SetRows] = useState([]);\r\n\r\n    const data = useSelector(store => store.AppReducer.data);\r\n    const dispatch = useDispatch();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        OpenModal: () => {\r\n            OpenModal();\r\n        }\r\n    }));\r\n\r\n    const OpenModal = () => {\r\n        SetModal(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let elements = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            elements.push(<Board\r\n                key={data[i]?.id}\r\n                id={data[i]?.id}\r\n                item={data[i]?.item}\r\n                registerType={data[i]?.registerType}\r\n                ledgerType={data[i]?.ledgerType}\r\n                debt={data[i]?.debt}\r\n                credit={data[i]?.credit}\r\n            />);\r\n        }\r\n        SetBoardList(...[elements]);\r\n    }, [data])\r\n\r\n    return (\r\n        <div style={{ height: \"400px\", width: \"100%\" }}>\r\n            <Modal \r\n                open={modal}\r\n                onClose={() => SetModal(false)}\r\n            />\r\n            <TableContainer component={Paper}>\r\n                <MaterialTable>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Item</TableCell>\r\n                            <TableCell>D/C</TableCell>\r\n                            <TableCell>Conta contábil</TableCell>\r\n                            <TableCell>Débito</TableCell>\r\n                            <TableCell>Crédito</TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {boardList}\r\n                    </TableBody>\r\n                </MaterialTable>\r\n            </TableContainer>\r\n            {/* <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n            /> */}\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Table;","import { useState } from \"react\";\r\nimport { TextField, Button } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AddDataArray } from \"../../../actions/AppActions\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nconst TextToList = props => {\r\n\r\n    const [text, SetText] = useState(\"\");\r\n\r\n    const launchList = useSelector(store => store.AppReducer.data);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const Convert = () => {\r\n        let lastId = launchList.sort((a, b) => {\r\n            if (a?.id < b?.id) return -1;\r\n            else if (a?.id > b?.id) return 1;\r\n            return 0;\r\n        })[launchList.length - 1]?.id || -1;//Get last id to don't generate already created ids\r\n\r\n        if (!text) return;\r\n        let data = [];\r\n        let rows = text.split(\"\\n\");\r\n\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = rows[i].split(\"\\t\");\r\n\r\n            let words = row[2].split(\" \");\r\n            \r\n            for (let i = 0; i < words.length; i++) {\r\n                if (words[i].length <= 3 || words[i] == \"sobre\" || words[i] == \"conta\" || words[i] == \"para\") continue;\r\n                words[i] = words[i].charAt(0).toUpperCase() + words[i].substr(1);\r\n            }\r\n            \r\n            let ledgerType = words.join(\" \");\r\n\r\n            row[3].replace(\"\\.\", \"\").replace(\",\", \".\");//removes dots and swap the comma with a dot\r\n            row[4].replace(\"\\.\", \"\").replace(\",\", \".\");\r\n\r\n            data.push({\r\n                id: lastId + i + 1,//mais um pq quando i == 0 ele vai ser igual ao último id\r\n                item: row[0],\r\n                registerType: row[1].toUpperCase(),\r\n                ledgerType: ledgerType,\r\n                debt: row[3] && parseFloat(row[3].replace(/[^,\\d]/g, \"\")),\r\n                credit: row[4] && parseFloat(row[4].replace(/[^,\\d]/g, \"\"))\r\n            });\r\n        }\r\n\r\n        dispatch(AddDataArray(data));\r\n        SetText(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className={styles.textInput}>\r\n            <TextField\r\n                fullWidth\r\n                variant=\"filled\"\r\n                label=\"Texto copiado do Excel\"\r\n                multiline\r\n                value={text}\r\n                rows={1}\r\n                onChange={e => SetText(e.target.value)}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={Convert}\r\n            >\r\n                Converter\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextToList;","import React, { useState } from \"react\";\r\nimport Table from \"./Table\";\r\nimport TextToList from \"./TextToList\";\r\n\r\nconst Launches = React.forwardRef((props, ref) => {\r\n\r\n    return (\r\n        <div className=\"launches\">\r\n            <TextToList/>\r\n            <Table\r\n                ref={ref}\r\n            />\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Launches;","import React, { useState } from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Card as MaterialCard, Typography, Collapse, CardActions, IconButton } from \"@mui/material\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n\r\nimport \"./index.css\";\r\n\r\nconst Card = props => {\r\n\r\n    const {\r\n        title,\r\n        debts = [],\r\n        credits = [],\r\n        item\r\n    } = props;\r\n\r\n    const [expanded, SetExpanded] = useState(false);\r\n\r\n    return (\r\n        <MaterialCard \r\n            raised\r\n            style={{\r\n                padding: \"5px\"\r\n            }}\r\n        >\r\n            <Typography align=\"center\" variant=\"button\" component=\"div\" style={{ fontSize: \"20px\", fontWeight: 700, padding: \"5px\" }}>{title}</Typography>\r\n            <CardActions style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <IconButton onClick={() => SetExpanded(!expanded)}>\r\n                    {expanded ? <ExpandLessIcon/> : <ExpandMoreIcon/>}\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\">\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell></TableCell>\r\n                                <TableCell>Débito</TableCell>\r\n                                <TableCell>Crédito</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {debts?.map((value, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell>{value}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            {credits?.map((value, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell>{value}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            <TableRow>\r\n                                <TableCell>Soma</TableCell>\r\n                                <TableCell>{(() => {\r\n                                    let sum = 0;\r\n                                    for (let i = 0; i < debts.length; i++) sum += debts[i];\r\n                                    return sum;\r\n                                })()}</TableCell>\r\n                                <TableCell>{(() => {\r\n                                    let sum = 0;\r\n                                    for (let i = 0; i < credits.length; i++) sum += credits[i];\r\n                                    return sum;\r\n                                })()}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Saldo</TableCell>\r\n                                <TableCell className=\"text-primary\">{(() => {\r\n                                    let sum = 0;\r\n                                    for (let i = 0; i < debts.length; i++) sum += debts[i];\r\n                                    for (let i = 0; i < credits.length; i++) sum -= credits[i];\r\n                                    return sum >= 0 && sum;\r\n                                })()}</TableCell>\r\n                                <TableCell className=\"text-danger\">{(() => {\r\n                                    let sum = 0;\r\n                                    for (let i = 0; i < debts.length; i++) sum += debts[i];\r\n                                    for (let i = 0; i < credits.length; i++) sum -= credits[i];\r\n                                    return sum < 0 && sum;\r\n                                })()}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Collapse>\r\n        </MaterialCard>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Card from \"./Card\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Reasons = () => {\r\n\r\n    const [reasonList, SetReasonList] = useState({});\r\n\r\n    const data = useSelector(store => store.AppReducer.data);\r\n\r\n    useEffect(() => {\r\n        // console.log(data)\r\n        let tempReasonsList = {};\r\n        data.map(x => {\r\n            if (!x?.ledgerType) return;\r\n            let debts = [];\r\n            let credits = [];\r\n            \r\n            if (tempReasonsList[x?.ledgerType]?.debts) debts.push(...tempReasonsList[x?.ledgerType]?.debts);\r\n            if (tempReasonsList[x?.ledgerType]?.credits) credits.push(...tempReasonsList[x?.ledgerType]?.credits);\r\n\r\n            if (!isNaN(parseFloat(x?.debt))) debts.push(parseFloat(x?.debt));\r\n            if (!isNaN(parseFloat(x?.credit))) credits.push(parseFloat(x?.credit));\r\n            tempReasonsList[x?.ledgerType] = {\r\n                debts: debts,\r\n                credits: credits\r\n            }\r\n        });\r\n        SetReasonList(tempReasonsList);\r\n    }, [data]);\r\n\r\n    return (\r\n        <div className=\"reason\">\r\n            <div className=\"reason-cards-list\">\r\n                {(() => {\r\n                    let cards = [];\r\n                    for (const [key, value] of Object.entries(reasonList)) {\r\n                        cards.push(<Card\r\n                            title={key}\r\n                            debts={value.debts}\r\n                            credits={value.credits}\r\n                            key={key}\r\n                        />);\r\n                    }\r\n                    return cards;\r\n                })()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reasons;","import { Tooltip, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Container = props => {\r\n\r\n    const {\r\n        title,\r\n        children = [],\r\n        value,\r\n        ...other\r\n    } = props;\r\n\r\n    return (\r\n        <div \r\n            className=\"bpdre-group\"\r\n        >\r\n            <div className=\"bpdre-row jcsb\">\r\n                <Typography\r\n                    style={{\r\n                        fontWeight: children.length == 0 ? 0 : 700,\r\n                        fontSize: children.length == 0 ? \"14px\" : \"18px\"\r\n                    }}\r\n                    variant=\"button\"\r\n                >\r\n                    {title}\r\n                </Typography>\r\n                <Tooltip\r\n                    title={`Valor de ${title}`}\r\n                    placement=\"left\"\r\n                    arrow\r\n                >\r\n                    <div className=\"bpdre-value text-center\">\r\n                        {value}\r\n                    </div>\r\n                </Tooltip>\r\n            </div>\r\n            <div className=\"bpdre-children\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"../../Container\";\r\nimport { LEDGER_REFS, BPDRE_OBJ } from \"../../../../data\";\r\nimport { UpdateResumeData } from \"../../../../actions/AppActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Active = props => {\r\n\r\n    const {\r\n        reasonList\r\n    } = props;\r\n\r\n    const [list, SetList] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let data = {\r\n            caixa: reasonList[\"Caixa\"] ? reasonList[\"Caixa\"]?.balance : 0,\r\n            bancos: reasonList[\"Bancos\"] ? reasonList[\"Bancos\"]?.balance : 0,\r\n            clientes: reasonList[\"Clientes\"] ? reasonList[\"Clientes\"]?.balance : 0,\r\n            poupanca: reasonList[\"Poupança\"] ? reasonList[\"Poupança\"]?.balance : 0,\r\n            adiantamentosFuncionarios: reasonList[\"Adiantamentos a Funcionários\"] ? reasonList[\"Adiantamentos a Funcionários\"]?.balance : 0,\r\n            adiantamentosFornecedor: reasonList[\"Adiantamentos a Fornecedor\"]?.balance ?? 0,\r\n            mercadoriaRevenda: reasonList[\"Mercadoria para Revenda\"]?.balance ?? 0,\r\n            segurosVencer: reasonList[\"Seguros à Vencer\"]?.balance ?? 0,\r\n            assinaturasRevistas: reasonList[\"Assinaturas de Revistas\"]?.balance ?? 0,\r\n            titulosReceber: reasonList[\"Títulos à Receber\"]?.balance ?? 0,\r\n            clientesLP: reasonList[\"Clientes (LP)\"]?.balance ?? 0,\r\n            participacaoFundoInvestimentos: reasonList[\"Participação em Fundos de Investimentos\"]?.balance ?? 0,\r\n            computadoresPerifericos: reasonList[\"Computadores e Periféricos\"]?.balance ?? 0,\r\n            equipamentosTelefonicos: reasonList[\"Equipamentos Telefônicos\"]?.balance ?? 0,\r\n            maquinasEquipamentos: reasonList[\"Máquinas e Equipamentos\"]?.balance ?? 0,\r\n            moveisUtensilios: reasonList[\"Móveis e Utensílios\"]?.balance ?? 0,\r\n            predios: reasonList[\"Prédios\"]?.balance ?? 0,\r\n            prediosConstrucao: reasonList[\"Prédios em Construção\"]?.balance ?? 0,\r\n            terrenos: reasonList[\"Terrenos\"]?.balance ?? 0,\r\n            veiculos: reasonList[\"Veículos\"]?.balance ?? 0,\r\n            depreciacaoAcumulada: reasonList[\"Depreciação Acumulada\"]?.balance ?? 0,\r\n            pesquisaDevProdutos: reasonList[\"Pesquisa e Desenvolvimento de Produtos\"]?.balance ?? 0,\r\n        };\r\n\r\n        Object.assign(data, {\r\n            disponivel: data.caixa + data.bancos,\r\n            creditos: data.clientes + data.poupanca + data.adiantamentosFuncionarios + data.adiantamentosFornecedor,\r\n            estoques: data.mercadoriaRevenda,\r\n            despesasAntecipadas: data.segurosVencer + data.assinaturasRevistas,\r\n            outrosValBens: data.titulosReceber,\r\n            realizavelLongoPrazo: data.clientesLP,\r\n            investimentos: data.participacaoFundoInvestimentos,\r\n            imobilizado: data.computadoresPerifericos + data.equipamentosTelefonicos + data.maquinasEquipamentos + data.moveisUtensilios + data.predios + data.prediosConstrucao + data.terrenos + data.veiculos + data.depreciacaoAcumulada,\r\n            intangivel: data.pesquisaDevProdutos\r\n        });\r\n\r\n        Object.assign(data, {\r\n            circulante: data.disponivel + data.creditos + data.estoques + data.despesasAntecipadas + data.outrosValBens,\r\n            naoCirculantes: data.realizavelLongoPrazo + data.investimentos + data.imobilizado + data.intangivel\r\n        });\r\n\r\n        Object.assign(data, {\r\n            ativo: data.circulante + data.naoCirculantes\r\n        });\r\n\r\n        dispatch(UpdateResumeData({\r\n            ativo: data.ativo,\r\n            ativoCirculante: data.circulante,\r\n            ativoImobilizado: data.naoCirculantes\r\n        }));\r\n        SetList(...[data]);\r\n    }, [reasonList]);\r\n\r\n    return (\r\n        <Container title=\"ATIVO\" value={list.ativo}>\r\n            <Container title=\"CIRCULANTE\" value={list.circulante}>\r\n                <Container title=\"DISPONÍVEL\" value={list.disponivel}>\r\n                    <Container title=\"Caixa\" value={list.caixa}></Container>\r\n                    <Container title=\"Bancos\" value={list.bancos}></Container>\r\n                </Container>\r\n                <Container title=\"CRÉDITOS\" value={list.creditos}>\r\n                    <Container title=\"Clientes\" value={list.clientes}></Container>\r\n                    <Container title=\"Poupança\" value={list.poupanca}></Container>\r\n                    <Container title=\"Adiantamentos a Funcionários\" value={list.adiantamentosFuncionarios}></Container>\r\n                    <Container title=\"Adiantamentos a Fornecedor\" value={list.adiantamentosFornecedor}></Container>\r\n                </Container>\r\n                <Container title=\"ESTOQUES\" value={list.estoques}>\r\n                    <Container title=\"Mercadoria pra Revenda\" value={list.mercadoriaRevenda}></Container>\r\n                </Container>\r\n                <Container title=\"DESPESAS ANTECIPADAS\" value={list.despesasAntecipadas}>\r\n                    <Container title=\"Seguros à Vencer\" value={list.segurosVencer}></Container>\r\n                    <Container title=\"Assinaturas de Revistas\" value={list.assinaturasRevistas}></Container>\r\n                </Container>\r\n                <Container title=\"OUTROS VALORES E BENS\" value={list.outrosValBens}>\r\n                    <Container title=\"Títulos à Receber\" value={list.titulosReceber}></Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"NÃO CIRCULANTE\" value={list.naoCirculantes}>\r\n                <Container title=\"REALIZÁVEL À LONGO PRAZO\" value={list.realizavelLongoPrazo}>\r\n                    <Container title=\"Clientes (LP)\" value={list.clientesLP}></Container>\r\n                </Container>\r\n                <Container title=\"INVESTIMENTOS\" value={list.investimentos}>\r\n                    <Container title=\"Participação em Fundos de Investimentos\" value={list.participacaoFundoInvestimentos}></Container>\r\n                </Container>\r\n                <Container title=\"IMOBILIZADO\" value={list.imobilizado}>\r\n                    <Container title=\"Computadores e Periféricos\" value={list.computadoresPerifericos}></Container>\r\n                    <Container title=\"Equipamentos Telefônicos\" value={list.equipamentosTelefonicos}></Container>\r\n                    <Container title=\"Máquinas e Equipamentos\" value={list.maquinasEquipamentos}></Container>\r\n                    <Container title=\"Móveis e Utensílios\" value={list.moveisUtensilios}></Container>\r\n                    <Container title=\"Prédios\" value={list.predios}></Container>\r\n                    <Container title=\"Prédios em Construção\" value={list.prediosConstrucao}></Container>\r\n                    <Container title=\"Terrenos\" value={list.terrenos}></Container>\r\n                    <Container title=\"Veículos\" value={list.veiculos}></Container>\r\n                    <Container title=\"Depreciação Acumulada\" value={list.depreciacaoAcumulada}></Container>\r\n                </Container>\r\n                <Container title=\"INTANGÍVEL\" value={list.intangivel}>\r\n                    <Container title=\"Pesquisa e Desenvolvimento de Produtos\" value={list.pesquisaDevProdutos}></Container>\r\n                </Container>\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Active;","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"../../Container\";\r\nimport { UpdateResumeData } from \"../../../../actions/AppActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Passive = props => {\r\n\r\n    const {\r\n        reasonList\r\n    } = props;\r\n\r\n    const [list, SetList] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const venda = Math.abs(reasonList[\"Venda\"]?.balance ?? 0) + Math.abs(reasonList[\"Venda de Mercadoria\"]?.balance ?? 0);\r\n        //Deduções\r\n        const vendasCaneladas = reasonList[\"Vendas Caneladas\"]?.balance ?? 0;\r\n        const icmsVendas = reasonList[\"ICMS sobre Vendas\"]?.balance ?? 0;\r\n        const cofins = reasonList[\"Cofins\"]?.balance ?? 0;\r\n        const pis = reasonList[\"Pis\"]?.balance ?? 0;\r\n        const devolucaoVendas = reasonList[\"Devolução de Vendas\"]?.balance ?? 0;\r\n        const deducoes = icmsVendas + cofins + pis + vendasCaneladas + devolucaoVendas;\r\n        //Fim deduções\r\n        //Despesas\r\n        const comissoesVendas = reasonList[\"Comissões sobre Vendas\"]?.balance ?? 0;\r\n        const propagandaPublicidade = reasonList[\"Propaganda e Publicidade\"]?.balance ?? 0;\r\n        const salariosOrdenados = reasonList[\"Salários e Ordenados\"]?.balance ?? 0;\r\n        const aluguel = reasonList[\"Aluguel\"]?.balance ?? 0;\r\n        const depreciacao = reasonList[\"Depreciação\"]?.balance ?? 0;\r\n        const manutencaoReparos = reasonList[\"Manutenção e Reparos\"]?.balance ?? 0;\r\n        const agua = reasonList[\"Água\"]?.balance ?? 0;\r\n        const correio = reasonList[\"Correio\"]?.balance ?? 0;\r\n        const energiaEletrica = reasonList[\"Energia Elétrica\"]?.balance ?? 0;\r\n        const seguros = reasonList[\"Seguros\"]?.balance ?? 0;\r\n        const telefone = reasonList[\"Telefone\"]?.balance ?? 0;\r\n        const transportePessoal = reasonList[\"Transporte de Pessoal\"]?.balance ?? 0;\r\n        const proLabore = reasonList[\"Pró-Labore\"]?.balance ?? 0;\r\n        const materialEscritorio = reasonList[\"Material de Escritório\"]?.balance ?? 0;\r\n        const refeicoesLanches = reasonList[\"Refeições e Lanches\"]?.balance ?? 0;\r\n        const revistasPublicacoes = reasonList[\"Revistas e Publicações\"]?.balance ?? 0;\r\n\r\n        const despesasVendas = comissoesVendas + propagandaPublicidade;\r\n        const despesasAdmin = salariosOrdenados + aluguel + depreciacao + manutencaoReparos + agua + correio + energiaEletrica + seguros + telefone + transportePessoal + proLabore + materialEscritorio + refeicoesLanches + revistasPublicacoes;\r\n        const resultadoFinanceiroLiquido = (reasonList[\"Despesas Financeiras\"]?.balance ?? 0) + (reasonList[\"Receitas Financeiras\"]?.balance ?? 0);\r\n        //Fim despesas\r\n\r\n        const receitaLiquida = venda - deducoes;\r\n        const lucroBruto = Math.abs(receitaLiquida - (reasonList[\"Custos das Mercadorias Vendidas\"]?.balance ?? 0)); \r\n        const resultadoOperacional = Math.abs(lucroBruto - (despesasVendas + despesasAdmin + resultadoFinanceiroLiquido));\r\n        const resultadoAntesImposto = Math.abs(resultadoOperacional - ((reasonList[\"Ganhos na Alienação do Imobilizado\"]?.balance ?? 0) + (reasonList[\"Valor Líquido de Bens Baixado\"]?.balance ?? 0)));\r\n        const lucroPrejuizoExercicio = Math.abs(resultadoAntesImposto - (reasonList[\"IRPJ\"]?.balance ?? 0) + (reasonList[\"IRPJ - Adicional\"]?.balance ?? 0) + (reasonList[\"CSLL\"]?.balance ?? 0));\r\n\r\n        let data = {\r\n            salPagar: reasonList[\"Salários à Pagar\"]?.balance ?? 0,\r\n            fornecedores: Math.abs(reasonList[\"Fornecedores\"]?.balance ?? 0),\r\n            bancosMovimento: reasonList[\"Bancos conta Movimento\"]?.balance ?? 0,\r\n            emprestimosBancarios: reasonList[\"Empréstimos Bancários\"]?.balance ?? 0,\r\n            assinaturasAnuidade: reasonList[\"Assinaturas e Anuidades a Pagar\"]?.balance ?? 0,\r\n            segurosPagar: reasonList[\"Seguros à Pagar\"]?.balance ?? 0,\r\n            capitalSocial: Math.abs(reasonList[\"Capital Social\"]?.balance ?? 0),\r\n            reservasCapital: reasonList[\"Reservas de Capital\"]?.balance ?? 0,\r\n            reservasReavaliacao: reasonList[\"Reservas de Reavaliação\"]?.balance ?? 0,\r\n            reservasLucro: reasonList[\"Reservas de Lucro\"]?.balance ?? 0,\r\n            lucroPrejuizoAcumulado: reasonList[\"Lucro ou Prejuízo Acumulado\"]?.balance ?? 0,\r\n            lucroPrejuizoExercicio: lucroPrejuizoExercicio\r\n        };\r\n\r\n        Object.assign(data, {\r\n            obrigacoes: data.salPagar + data.fornecedores + data.bancosMovimento + data.emprestimosBancarios + data.assinaturasAnuidade + data.segurosPagar,\r\n            obrigacoesLongoPrazo: data.emprestimosBancarios,\r\n            capital: data.capitalSocial,\r\n            reservas: data.reservasCapital + data.reservasLucro + data.reservasReavaliacao,\r\n            lucroPrejuizo: data.lucroPrejuizoAcumulado + data.lucroPrejuizoExercicio\r\n        });\r\n\r\n        Object.assign(data, {\r\n            circulante: data.obrigacoes,\r\n            naoCirculante: data.obrigacoesLongoPrazo,\r\n            patrimonioLiquido: data.capital + data.reservas + data.lucroPrejuizo\r\n        });\r\n\r\n        Object.assign(data, {\r\n            passive: data.circulante + data.naoCirculante + data.patrimonioLiquido\r\n        });\r\n\r\n        dispatch(UpdateResumeData({\r\n            passivo: data.passive,\r\n            passivoCirculante: data.circulante,\r\n            patrimonioLiquido: data.patrimonioLiquido\r\n        }));\r\n\r\n        SetList(...[data]);\r\n    }, [reasonList]);\r\n\r\n    return (\r\n        <Container title=\"PASSIVO\" value={list.passive}>\r\n            <Container title=\"CIRCULANTE\" value={list.circulante}>\r\n                <Container title=\"OBRIGAÇÕES\" value={list.obrigacoes}>\r\n                    <Container title=\"Salários à Pagar\" value={list.salPagar}></Container>\r\n                    <Container title=\"Fornecedores\" value={list.fornecedores}></Container>\r\n                    <Container title=\"Bancos conta Movimento\" value={list.bancosMovimento}></Container>\r\n                    <Container title=\"Empréstimos Bancários\" value={list.emprestimosBancarios}></Container>\r\n                    <Container title=\"Assinaturas e Anuidades a Pagar\" value={list.assinaturasAnuidade}></Container>\r\n                    <Container title=\"Seguros à Pagar\" value={list.segurosPagar}></Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"NÃO CIRCULANTE\" value={list.naoCirculante}>\r\n                <Container title=\"OBRIGAÇÕES DE LONGO PRAZO\" value={list.obrigacoesLongoPrazo}>\r\n                    <Container title=\"Empréstimos Bancários\" value={list.emprestimosBancarios}/>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"PATRIMÔNIO LÍQUIDO\" value={list.patrimonioLiquido}>\r\n                <Container title=\"CAPITAL\" value={list.capital}>\r\n                    <Container title=\"Capital Social\" value={list.capitalSocial}/>\r\n                </Container>\r\n                <Container title=\"RESERVAS\" value={list.reservas}>\r\n                    <Container title=\"Reservas de Capital\" value={list.reservasCapital}/>\r\n                    <Container title=\"Reservas de Reavaliação\" value={list.reservasReavaliacao}/>\r\n                    <Container title=\"Reservas de Lucro\" value={list.reservasLucro}/>\r\n                </Container>\r\n                <Container title=\"LUCRO OU PREJUÍZO\" value={list.lucroPrejuizo}>\r\n                    <Container title=\"Lucro ou Prejuízo Acumulado\" value={list.lucroPrejuizoAcumulado}/>\r\n                    <Container title=\"Lucro ou Prejuízo do Exercício\" value={list.lucroPrejuizoExercicio}/>\r\n                </Container>\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Passive;","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"../../Container\";\r\nimport { UpdateResumeData } from \"../../../../actions/AppActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Results = props => {\r\n\r\n    const {\r\n        reasonList\r\n    } = props;\r\n\r\n    const [list, SetList] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let data = {\r\n            venda: Math.abs(reasonList[\"Venda\"]?.balance ?? 0) + Math.abs(reasonList[\"Venda de Mercadoria\"]?.balance ?? 0),\r\n            icmsVendas: reasonList[\"ICMS sobre Vendas\"]?.balance ?? 0,\r\n            cofins: reasonList[\"Cofins\"]?.balance ?? 0,\r\n            pis: reasonList[\"Pis\"]?.balance ?? 0,\r\n            vendasCaneladas: reasonList[\"Vendas Caneladas\"]?.balance ?? 0,\r\n            devolucaoVendas: reasonList[\"Devolução de Vendas\"]?.balance ?? 0,\r\n            custosMercadoriasVendidas: reasonList[\"Custos das Mercadorias Vendidas\"]?.balance ?? 0,\r\n\r\n            comissoesVendas: reasonList[\"Comissões sobre Vendas\"]?.balance ?? 0,\r\n            propagandaPublicidade: reasonList[\"Propaganda e Publicidade\"]?.balance ?? 0,\r\n            salariosOrdenados: reasonList[\"Salários e Ordenados\"]?.balance ?? 0,\r\n            aluguel: reasonList[\"Aluguel\"]?.balance ?? 0,\r\n            depreciacao: reasonList[\"Depreciação\"]?.balance ?? 0,\r\n            manutencaoReparos: reasonList[\"Manutenção e Reparos\"]?.balance ?? 0,\r\n            agua: reasonList[\"Água\"]?.balance ?? 0,\r\n            correio: reasonList[\"Correio\"]?.balance ?? 0,\r\n            energiaEletrica: reasonList[\"Energia Elétrica\"]?.balance ?? 0,\r\n            seguros: reasonList[\"Seguros\"]?.balance ?? 0,\r\n            telefone: reasonList[\"Telefone\"]?.balance ?? 0,\r\n            transportePessoal: reasonList[\"Transporte de Pessoal\"]?.balance ?? 0,\r\n            proLabore: reasonList[\"Pró-Labore\"]?.balance ?? 0,\r\n            materialEscritorio: reasonList[\"Material de Escritório\"]?.balance ?? 0,\r\n            refeicoesLanches: reasonList[\"Refeições e Lanches\"]?.balance ?? 0,\r\n            revistasPublicacoes: reasonList[\"Revistas e Publicações\"]?.balance ?? 0,\r\n\r\n            despesasFinanceiras: reasonList[\"Despesas Financeiras\"]?.balance ?? 0,\r\n            receitasFinanceiras: reasonList[\"Receitas Financeiras\"]?.balance ?? 0,\r\n\r\n            ganhosAlienacaoImobilizado: reasonList[\"Ganhos na Alienação do Imobilizado\"]?.balance ?? 0,\r\n            valorLiquidoBensBaixado: reasonList[\"Valor Líquido de Bens Baixado\"]?.balance ?? 0,\r\n\r\n            perdasAlienacaoImobilizado: reasonList[\"Perdas na Alienação do Imobilizado\"]?.balance ?? 0,\r\n\r\n            irpj: reasonList[\"IRPJ\"]?.balance ?? 0,\r\n            irpjAdicional: reasonList[\"IRPJ - Adicional\"]?.balance ?? 0,\r\n            csll: reasonList[\"CSLL\"]?.balance ?? 0\r\n        };\r\n\r\n        Object.assign(data, {\r\n            receitasOperacionais: data.venda,\r\n            deducoesReceitasVendas: data.icmsVendas + data.cofins + data.pis + data.vendasCaneladas + data.devolucaoVendas,//\r\n            custosMercadorias: data.custosMercadoriasVendidas,\r\n\r\n            despesasVendas: data.comissoesVendas + data.propagandaPublicidade,\r\n            despesasAdmin: data.salariosOrdenados + data.aluguel + data.depreciacao + data.manutencaoReparos + data.agua + data.correio + data.energiaEletrica + data.seguros + data.telefone + data.transportePessoal + data.proLabore + data.materialEscritorio + data.refeicoesLanches + data.revistasPublicacoes,\r\n            resultadoFinanceiroLiquido: data.despesasFinanceiras + data.receitasFinanceiras,\r\n\r\n            receitasNaoOperacionais: data.ganhosAlienacaoImobilizado + data.valorLiquidoBensBaixado,\r\n            despesasNaoOperacionais: data.perdasAlienacaoImobilizado + data.valorLiquidoBensBaixado,\r\n            impostosContribuicoes: data.irpj + data.irpjAdicional + data.csll,\r\n            resultadoExercicio: data.lucroPrejuizoExercicio///////////\r\n        });\r\n\r\n        Object.assign(data, {\r\n            receitas: data.receitasOperacionais,\r\n            deducoes: data.deducoesReceitasVendas,\r\n            custos: data.custosMercadorias,\r\n            despesas: data.despesasVendas + data.despesasAdmin + data.resultadoFinanceiroLiquido,\r\n            receitasDespesasNaoOperacionais: data.receitasNaoOperacionais + data.despesasNaoOperacionais,\r\n            provisaoImpostosContribuicoes: data.impostosContribuicoes,\r\n            resultado: data.resultadoExercicio///////////////\r\n        });\r\n\r\n        const receitaLiquida = Math.abs(data.receitas - data.deducoes);\r\n        const lucroBruto = Math.abs(receitaLiquida - data.custos); \r\n        const resultadoOperacional = Math.abs(lucroBruto - data.despesas);\r\n        const resultadoAntesImposto = Math.abs(resultadoOperacional - data.receitasDespesasNaoOperacionais);\r\n        const lucroPrejuizoExercicio = Math.abs(resultadoAntesImposto - data.provisaoImpostosContribuicoes);\r\n\r\n        Object.assign(data, {\r\n            demonstracaoResultadoExercicio: data.receitas + data.deducoes,\r\n            receitaLiquida: receitaLiquida,\r\n            lucroBruto: lucroBruto,\r\n            resultadoOperacional: resultadoOperacional,\r\n            resultadoImpostoRendaContriSocial: lucroPrejuizoExercicio,\r\n            lucroPrejuizoExercicio: lucroPrejuizoExercicio\r\n        });\r\n\r\n        dispatch(UpdateResumeData({\r\n            vendas: data.venda,\r\n            custosMercadoriasVendidas: data.custosMercadoriasVendidas,\r\n            despesas: data.despesas,\r\n            lucroLiquido: lucroPrejuizoExercicio,\r\n            // lucroLiquido: data.demonstracaoResultadoExercicio - (data.receitaLiquida + data.lucroBruto)\r\n        }));\r\n\r\n        SetList(...[data]);\r\n    }, [reasonList]);\r\n\r\n    return (\r\n        <div>\r\n            <Container title=\"DEMONSTRAÇÃO DO RESULTADO DO EXERCÍCIO\" value={list.demonstracaoResultadoExercicio}>\r\n                <Container title=\"RECEITAS\" value={list.receitas}>\r\n                    <Container title=\"RECEITAS OPERACIONAIS\" value={list.receitasOperacionais}>\r\n                        <Container title=\"Venda\" value={list.venda}></Container>\r\n                    </Container>\r\n                </Container>\r\n                <Container title=\"DEDUÇÕES\" value={list.deducoes}>\r\n                    <Container title=\"DEDUÇÕES NAS RECEITAS COM VENDAS\" value={list.deducoesReceitasVendas}>\r\n                        <Container title=\"ICMS sobre Vendas\" value={list.icmsVendas}></Container>\r\n                        <Container title=\"Cofins\" value={list.cofins}></Container>\r\n                        <Container title=\"Pis\" value={list.pis}></Container>\r\n                        <Container title=\"Vendas Caneladas\" value={list.vendasCaneladas}></Container>\r\n                        <Container title=\"Devolução de Vendas\" value={list.devolucaoVendas}></Container>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"RECEITA LÍQUIDA\" value={list.receitaLiquida}>\r\n                <Container title=\"CUSTOS\" value={list.custos}>\r\n                    <Container title=\"CUSTOS DAS MERCADORIAS\" value={list.custosMercadorias}>\r\n                        <Container title=\"Custos das Mercadorias Vendidas\" value={list.custosMercadoriasVendidas}></Container>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"LUCRO BRUTO\" value={list.lucroBruto}>\r\n                <Container title=\"DESPESAS\" value={list.despesas}>\r\n                    <Container title=\"DESPESAS COM VENDAS\" value={list.despesasVendas}>\r\n                        <Container title=\"Comissões sobre Vendas\" value={list.comissoesVendas}></Container>\r\n                        <Container title=\"Propaganda e Publicidade\" value={list.propagandaPublicidade}></Container>\r\n                    </Container>\r\n                    <Container title=\"DESPESAS ADMINISTRATIVAS\" value={list.despesasAdmin}>\r\n                        <Container title=\"Salários e Ordenados\" value={list.salariosOrdenados}></Container>\r\n                        <Container title=\"Aluguel\" value={list.aluguel}></Container>\r\n                        <Container title=\"Depreciação\" value={list.depreciacao}></Container>\r\n                        <Container title=\"Manutenção e Reparos\" value={list.manutencaoReparos}></Container>\r\n                        <Container title=\"Água\" value={list.agua}></Container>\r\n                        <Container title=\"Correio\" value={list.correio}></Container>\r\n                        <Container title=\"Energia Elétrica\" value={list.energiaEletrica}></Container>\r\n                        <Container title=\"Seguros\" value={list.seguros}></Container>\r\n                        <Container title=\"Telefone\" value={list.telefone}></Container>\r\n                        <Container title=\"Transporte de Pessoal\" value={list.transportePessoal}></Container>\r\n                        <Container title=\"Pró-Labore\" value={list.proLabore}></Container>\r\n                        <Container title=\"Material de Escritório\" value={list.materialEscritorio}></Container>\r\n                        <Container title=\"Refeições e Lanches\" value={list.refeicoesLanches}></Container>\r\n                        <Container title=\"Revistas e Publicações\" value={list.revistasPublicacoes}></Container>\r\n                    </Container>\r\n                    <Container title=\"RESULTADO FINANCEIRO LÍQUIDO\" value={list.resultadoFinanceiroLiquido}>\r\n                        <Container title=\"Despesas Financeiras\" value={list.despesasFinanceiras}></Container>\r\n                        <Container title=\"Receitas Financeiras\" value={list.receitasFinanceiras}></Container>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"RESULTADO OPERACIONAL\" value={list.resultadoOperacional}>\r\n                <Container title=\"RECEITAS E DESPESAS NÃO OPERACIONAIS\" value={list.receitasDespesasNaoOperacionais}>\r\n                    <Container title=\"RECEITAS NÃO OPERACIONAIS\" value={list.receitasNaoOperacionais}>\r\n                        <Container title=\"Ganhos na Alienação do Imobilizado\" value={list.ganhosAlienacaoImobilizado}></Container>\r\n                        <Container title=\"Valor Líquido de Bens Baixado\" value={list.valorLiquidoBensBaixado}></Container>\r\n                    </Container>\r\n                    <Container title=\"DESPESAS NÃO OPERACIONAIS\" value={list.despesasNaoOperacionais}>\r\n                        <Container title=\"Perdas na Alienação do Imobilizado\" value={list.perdasAlienacaoImobilizado}></Container>\r\n                        <Container title=\"Valor Líquido de Bens Baixado\" value={list.valorLiquidoBensBaixado}></Container>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"RESULTADO ANTES DO IMPOSTO DE RENDA E CONTRIBUIÇÃO SOCIAL\" value={list.resultadoImpostoRendaContriSocial}>\r\n                <Container title=\"PROVISÃO PARA IMPOSTOS E CONTRIBUIÇÕES\" value={list.provisaoImpostosContribuicoes}>\r\n                    <Container title=\"IMPOSTOS E CONTRIBUIÇÕES\" value={list.impostosContribuicoes}>\r\n                        <Container title=\"IRPJ\" value={list.irpj}></Container>\r\n                        <Container title=\"IRPJ - Adicional\" value={list.irpjAdicional}></Container>\r\n                        <Container title=\"CSLL\" value={list.csll}></Container>\r\n                    </Container>\r\n                </Container>\r\n                <Container title=\"RESULTADO\" value={list.resultado}>\r\n                    <Container title=\"RESULTADO DO EXERCÍCIO\" value={list.resultadoExercicio}>\r\n                        <Container title=\"Lucro ou Prejuízo do Exercício\" value={list.lucroPrejuizoExercicio}></Container>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Results;","import React from \"react\";\r\nimport { Paper } from \"@mui/material\";\r\nimport Active from \"./Active\";\r\nimport Passive from \"./Passive\";\r\nimport Results from \"./Results\";\r\n\r\nconst List = props => {\r\n\r\n    const {\r\n        reasonList\r\n    } = props;\r\n\r\n    return (\r\n        <Paper\r\n            style={{\r\n                margin: \"10px 5%\",\r\n                padding: \"10px 25px\"\r\n            }}\r\n            elevation={4}\r\n        >\r\n            <Active\r\n                reasonList={reasonList}\r\n            />\r\n            <Passive\r\n                reasonList={reasonList}\r\n            />\r\n            <Results\r\n                reasonList={reasonList}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default List;","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Container from \"./Container\";\r\nimport List from \"./List\";\r\n\r\nconst BPDRE = () => {\r\n\r\n    const [reasonList, SetReasonList] = useState({});\r\n\r\n    const data = useSelector(store => store.AppReducer.data);\r\n\r\n    useEffect(() => {\r\n        let tempReasonsList = {};\r\n        data.map(x => {\r\n            if (!x?.ledgerType) return;\r\n            let debts = [];\r\n            let credits = [];\r\n            \r\n            if (tempReasonsList[x?.ledgerType]?.debts) debts.push(...tempReasonsList[x?.ledgerType]?.debts);\r\n            if (tempReasonsList[x?.ledgerType]?.credits) credits.push(...tempReasonsList[x?.ledgerType]?.credits);\r\n\r\n            if (!isNaN(parseFloat(x?.debt))) debts.push(parseFloat(x?.debt));\r\n            if (!isNaN(parseFloat(x?.credit))) credits.push(parseFloat(x?.credit));\r\n\r\n            let balance = 0;\r\n            for (let i = 0; i < debts.length; i++) balance += debts[i];\r\n            for (let i = 0; i < credits.length; i++) balance -= credits[i];\r\n            tempReasonsList[x?.ledgerType] = {\r\n                debts: debts,\r\n                credits: credits,\r\n                balance: balance\r\n            }\r\n        });\r\n        SetReasonList(tempReasonsList);\r\n    }, [data]);\r\n\r\n    return (\r\n        <div className=\"bpdre-container\">\r\n            <List\r\n                reasonList={reasonList}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BPDRE;","import { useEffect } from \"react\";\r\nimport { Paper, Card, CardContent, Typography } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nconst Resume = () => {\r\n\r\n    const resumeData = useSelector(store => store.AppReducer.resumeData);\r\n\r\n    return (\r\n        <Paper className={styles.container}>\r\n            <Card elevation={4}>\r\n                <CardContent>\r\n                    <Typography>Valor do ativo: {resumeData?.ativo}</Typography>\r\n                    <Typography>Valor do ativo circulante: {resumeData?.ativoCirculante}</Typography>\r\n                    <Typography>Valor do ativo imobilizado: {resumeData?.ativoImobilizado}</Typography>\r\n                    <Typography>Valor do passivo: {resumeData?.passivo}</Typography>\r\n                    <Typography>Valor do passivo circulante: {resumeData?.passivoCirculante}</Typography>\r\n                    <Typography>Valor do patrimônio líquido: {resumeData?.patrimonioLiquido}</Typography>\r\n                    <Typography>Valor das vendas: {resumeData?.vendas}</Typography>\r\n                    <Typography>Valor dos custos das mercadorias vendidas: {resumeData?.custosMercadoriasVendidas}</Typography>\r\n                    <Typography>Valor das despesas: {resumeData?.despesas}</Typography>\r\n                    <Typography>Valor do lucro líquido: {resumeData?.lucroLiquido}</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Resume;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { AppBar, BottomNavigation, BottomNavigationAction, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, ListItemButton, Tab, Tabs, Toolbar, Paper, Fab, Tooltip, Dialog, DialogTitle, DialogContent, DialogActions, Button } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport Launches from \"./Launches\";\r\nimport Reasons from \"./Reasons\";\r\nimport BPDRE from \"./BPDRE\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\n\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport ClearAllIcon from '@mui/icons-material/ClearAll';\r\n\r\nimport { SwitchTheme, Reset } from \"../actions/AppActions\";\r\n\r\nimport \"./index.css\";\r\nimport Resume from \"./Resume\";\r\n\r\nconst MainPage = () => {\r\n\r\n    const [activeTab, SetActiveTab] = useState(0);\r\n    const [drawer, SetDrawer] = useState(false);\r\n    const [resetDialog, SetResetDialog] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const theme = useSelector(store => store.AppReducer.theme);\r\n\r\n    const launchesRef = useRef();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [activeTab]);\r\n\r\n    return (\r\n        <Paper className=\"Menu\">\r\n            <AppBar \r\n                position=\"fixed\"\r\n            >\r\n                <Toolbar>\r\n                    <IconButton onClick={() => SetDrawer(true)}>\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <div className=\"d-md-block d-none w100\">\r\n                        <Tabs\r\n                            value={activeTab}\r\n                            onChange={(_, value) => {\r\n                                SetActiveTab(value);\r\n                                history.push(`?tab=${value}`);\r\n                            }}\r\n                            sx={{\r\n                                flexGrow: 1\r\n                            }}\r\n                            indicatorColor=\"secondary\"\r\n                            textColor=\"inherit\"\r\n                            variant=\"scrollable\"\r\n                        >\r\n                            <Tab label=\"Lançamentos\" index={0}/>\r\n                            <Tab label=\"Razão\" index={1}/>\r\n                            <Tab label=\"BP e DRE\" index={2}/>\r\n                            <Tab label=\"Resumo\" index={3}/>\r\n                        </Tabs>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"5em\"\r\n                }}\r\n                role=\"separator\"\r\n            />\r\n            <AppBar position=\"fixed\" style={{ top: \"auto\", bottom: 0 }}>\r\n                <div className=\"d-md-none d-block\">\r\n                    <BottomNavigation\r\n                        showLabels\r\n                        value={activeTab}\r\n                        onChange={(_, value) => {\r\n                            SetActiveTab(value);\r\n                            history.push(`?tab=${value}`);\r\n                        }}\r\n                        sx={{ width: \"100%\" }}\r\n                    >\r\n                        <BottomNavigationAction label=\"Lançamentos\"/>\r\n                        <BottomNavigationAction label=\"Razão\"/>\r\n                        <BottomNavigationAction label=\"BP e DRE\"/>\r\n                        <BottomNavigationAction label=\"Resumo\"/>\r\n                    </BottomNavigation>\r\n                </div>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                anchor=\"left\"\r\n                open={drawer}\r\n                onClose={() => SetDrawer(false)}\r\n                disableScrollLock\r\n            >\r\n                <div style={{ padding: \"10px\" }}>\r\n                    <IconButton onClick={() => dispatch(SwitchTheme())}>\r\n                        {theme === \"dark\" ? <LightModeIcon/> : <DarkModeIcon/>}\r\n                    </IconButton>\r\n                    <IconButton onClick={() => SetDrawer(false)} sx={{ float: \"right\" }}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <List>\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <GitHubIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Repositório no github\"/>\r\n                    </ListItem>\r\n                    <ListItem button onClick={() => SetResetDialog(true)}>\r\n                        <ListItemIcon>\r\n                            <ClearAllIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Resetar valores\"/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n\r\n            <Dialog\r\n                open={resetDialog}\r\n                onClose={() => SetResetDialog(false)}\r\n            >\r\n                <DialogTitle>Resetar valores das tabelas?</DialogTitle>\r\n                <DialogContent>Deseja mesmo resetar os valores da tabela? Todos os dados cadastrados serão perdidos!</DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"error\" onClick={() => SetResetDialog(false)}>Cancelar</Button>\r\n                    <Button variant=\"contained\" color=\"info\" onClick={() => {\r\n                        dispatch(Reset());\r\n                        SetResetDialog(false);\r\n                        SetDrawer(false);\r\n                    }}>Confirmar</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <SwipeableViews\r\n                index={activeTab}\r\n                onChangeIndex={index => SetActiveTab(index)}\r\n                style={{\r\n                    marginTop: \"1em\"\r\n                }}\r\n            >\r\n                <div className=\"launches\">\r\n                    <Launches\r\n                        ref={launchesRef}\r\n                    />\r\n                </div>\r\n                <div className=\"reasons\">\r\n                    <Reasons/>\r\n                </div>\r\n                <div className=\"bpdre\">\r\n                    <BPDRE/>\r\n                </div>\r\n                <div className=\"resume\">\r\n                    <Resume/>\r\n                </div>\r\n            </SwipeableViews>\r\n            <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"4em\"\r\n                }}\r\n                role=\"separator\"\r\n            />\r\n            //////ADD BUTTON//////\r\n            <Tooltip\r\n                title=\"Adicionar lançamento\"\r\n                arrow\r\n                placement=\"left\"\r\n            >\r\n                <Fab\r\n                    onClick={() => launchesRef.current.OpenModal()}\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        zIndex: 1200,\r\n                        right: \"20px\",\r\n                        bottom: \"20px\"\r\n                    }}\r\n                    size=\"medium\"\r\n                    hidden={activeTab !== 0}\r\n                    className=\"d-md-block d-none\"\r\n                    color=\"primary\"\r\n                >\r\n                    <AddIcon/>\r\n                </Fab>\r\n            </Tooltip>\r\n\r\n            <Tooltip\r\n                title=\"Adicionar lançamento\"\r\n                arrow\r\n                placement=\"top\"\r\n            >\r\n                <Fab\r\n                    onClick={() => launchesRef.current.OpenModal()}\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        zIndex: 1200,\r\n                        transform: \"translate(-50%, -50%)\",\r\n                        left: \"50%\",\r\n                        bottom: \"10px\"\r\n                    }}\r\n                    size=\"medium\"\r\n                    hidden={activeTab !== 0}\r\n                    className=\"d-md-none d-block\"\r\n                    color=\"primary\"\r\n                >\r\n                    <AddIcon/>\r\n                </Fab>\r\n            </Tooltip>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default MainPage;","// import { ThemeProvider } from \"@mui/material\";\n// import { createTheme } from \"@mui/system\";\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport MainPage from \"./pages\";\n\nconst lightPalette = {\n    \n}\n\nconst darkPalette = {\n    primary: {\n        main: \"#3f51b5\",\n        dark: \"#002984\",\n        light: \"#757de8\",\n        contrastText: \"#fff\"\n    }\n}\n\nfunction App() {\n\n    const theme = useSelector(store => store.AppReducer.theme);\n\n    const themeMode = React.useMemo(() => createTheme({\n        palette: {\n            mode: theme,\n            ...(theme === \"dark\" ? darkPalette : lightPalette)\n        }\n    }, [theme]));\n\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/\">\n                        <ThemeProvider theme={themeMode}>\n                            <MainPage/>\n                        </ThemeProvider>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\r\n    data: JSON.parse(window.localStorage.getItem(\"data\")) ?? [],\r\n    resumeData: JSON.parse(window.localStorage.getItem(\"resumeData\")) ?? {},\r\n    theme: \"dark\"\r\n};\r\n\r\nconst OrderByItem = (a, b) => {\r\n    if (a?.item < b?.item) return -1;\r\n    else if (a?.item > b?.item) return 1;\r\n    return 0;\r\n}\r\n\r\nconst SaveData = (dataParam = null, resumeParam = null) => {\r\n    if (dataParam) window.localStorage.setItem(\"data\", JSON.stringify(dataParam));\r\n    if (resumeParam) window.localStorage.setItem(\"resumeData\", JSON.stringify(resumeParam));\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"AddData\": {\r\n            let dataNoRepeat = state.data.filter(x => x?.id !== action.payload?.id);\r\n            \r\n            let newData = [...dataNoRepeat, ...[action.payload]]\r\n            newData.sort(OrderByItem);\r\n            \r\n            SaveData(newData);\r\n            return {   \r\n                ...state,\r\n                data: newData\r\n            };\r\n        } case \"AddDataArray\": {\r\n            let dataNoRepeat = state.data.filter(x => x?.id !== action.payload?.id);\r\n            \r\n            let newData = [...dataNoRepeat, ...action.payload];\r\n            newData.sort(OrderByItem);\r\n            \r\n            SaveData(newData);\r\n            return {   \r\n                ...state,\r\n                data: newData\r\n            };\r\n        } case \"UpdateData\": {\r\n            let data = state.data.filter(x => x?.id !== action.payload?.id);\r\n            \r\n            let newData = [...data, ...[action.payload]];\r\n            newData.sort(OrderByItem);\r\n\r\n            SaveData(newData);\r\n            return {\r\n                ...state,\r\n                data: newData\r\n            };\r\n        } case \"DeleteData\": {\r\n            let data = state.data.filter(x => x?.id !== action.id);\r\n            data = [...data.sort(OrderByItem)];\r\n            \r\n            SaveData(data);\r\n            return {\r\n                ...state,\r\n                data: data\r\n            };\r\n        } case \"UpdateResumeData\": {\r\n            let data = Object.assign(state.resumeData, action.payload);\r\n            \r\n            SaveData(null, data);\r\n            return {\r\n                ...state,\r\n                resumeData: data\r\n            };\r\n        } case \"SwitchTheme\": {\r\n            if (state.theme === \"dark\") return {\r\n                ...state,\r\n                theme: \"light\"\r\n            };\r\n            else if (state.theme === \"light\") return {\r\n                ...state,\r\n                theme: \"dark\"\r\n            }\r\n        } case \"Reset\": {\r\n            localStorage.removeItem(\"data\");\r\n            localStorage.removeItem(\"resumeData\");\r\n            return {\r\n                ...state,\r\n                data: [],\r\n                resumeData: {}\r\n            }\r\n        }\r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nexport default combineReducers({\r\n    AppReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport reducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    {/* <React.StrictMode> */}\n      <App />\n    {/* </React.StrictMode> */}\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}