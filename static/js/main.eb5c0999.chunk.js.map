{"version":3,"sources":["actions/AppActions.js","data.js","pages/Launches/Board/Modal/index.js","pages/Launches/Board/index.js","pages/Launches/Modal/index.js","pages/Launches/Table/index.js","pages/Launches/index.js","pages/Reasons/Card/index.js","pages/Reasons/index.js","pages/BPDRE/Container/index.js","pages/BPDRE/List/Active/index.js","pages/BPDRE/List/Passive/index.js","pages/BPDRE/List/Results/index.js","pages/BPDRE/List/index.js","pages/BPDRE/index.js","pages/Resume/index.js","pages/index.js","App.js","reportWebVitals.js","reducers/AppReducer.js","reducers/index.js","index.js"],"names":["UpdateResumeData","data","type","payload","LEDGER_REFS","Modal","props","onClose","id","item","registerType","ledgerType","debt","credit","other","useState","_id","_item","SetItem","_registerType","SetRegisterType","_ledgerType","SetLedgerType","_debt","SetDebt","_credit","SetCredit","dispatch","useDispatch","useEffect","Dialog","onBackdropClick","DialogTitle","DialogContent","className","sx","minWidth","TextField","variant","label","value","onChange","e","target","FormControl","InputLabel","Select","MenuItem","map","index","DialogActions","Button","color","onClick","Board","modal","SetModal","TableRow","TableCell","style","verticalAlign","open","IconButton","boardCount","SetBoardCount","Table","React","forwardRef","ref","boardList","SetBoardList","useSelector","store","AppReducer","useImperativeHandle","OpenModal","elements","i","length","push","height","width","TableContainer","component","Paper","TableHead","TableBody","Launches","Card","title","debts","credits","expanded","SetExpanded","raised","padding","Typography","align","fontSize","fontWeight","CardActions","display","justifyContent","Collapse","in","timeout","sum","Reasons","reasonList","SetReasonList","tempReasonsList","x","isNaN","parseFloat","cards","Object","entries","key","Container","children","Tooltip","placement","arrow","Active","list","SetList","caixa","balance","bancos","clientes","poupanca","adiantamentosFuncionarios","adiantamentosFornecedor","mercadoriaRevenda","segurosVencer","assinaturasRevistas","titulosReceber","clientesLP","participacaoFundoInvestimentos","computadoresPerifericos","equipamentosTelefonicos","maquinasEquipamentos","moveisUtensilios","predios","prediosConstrucao","terrenos","veiculos","depreciacaoAcumulada","pesquisaDevProdutos","assign","disponivel","creditos","estoques","despesasAntecipadas","outrosValBens","realizavelLongoPrazo","investimentos","imobilizado","intangivel","circulante","naoCirculantes","ativo","ativoCirculante","ativoImobilizado","Passive","salPagar","fornecedores","bancosMovimento","emprestimosBancarios","assinaturasAnuidade","segurosPagar","capitalSocial","reservasCapital","reservasReavaliacao","reservasLucro","lucroPrejuizoAcumulado","lucroPrejuizoExercicio","obrigacoes","obrigacoesLongoPrazo","capital","reservas","lucroPrejuizo","naoCirculante","patrimonioLiquido","passive","passivo","passivoCirculante","Results","venda","icmsVendas","cofins","pis","vendasCaneladas","devolucaoVendas","custosMercadoriasVendidas","comissoesVendas","propagandaPublicidade","salariosOrdenados","aluguel","depreciacao","manutencaoReparos","agua","correio","energiaEletrica","seguros","telefone","transportePessoal","proLabore","materialEscritorio","refeicoesLanches","revistasPublicacoes","despesasFinanceiras","receitasFinanceiras","ganhosAlienacaoImobilizado","valorLiquidoBensBaixado","perdasAlienacaoImobilizado","irpj","irpjAdicional","csll","receitasOperacionais","deducoesReceitasVendas","custosMercadorias","despesasVendas","despesasAdmin","resultadoFinanceiroLiquido","receitasNaoOperacionais","despesasNaoOperacionais","impostosContribuicoes","resultadoExercicio","receitas","deducoes","custos","despesas","receitasDespesasNaoOperacionais","provisaoImpostosContribuicoes","resultado","demonstracaoResultadoExercicio","receitaLiquida","lucroBruto","resultadoOperacional","resultadoImpostoRendaContriSocial","vendas","lucroLiquido","custo","List","margin","elevation","BPDRE","Resume","resumeData","console","log","MainPage","activeTab","SetActiveTab","drawer","SetDrawer","history","useHistory","theme","launchesRef","useRef","AppBar","position","Toolbar","Tabs","_","flexGrow","indicatorColor","textColor","Tab","top","bottom","BottomNavigation","showLabels","BottomNavigationAction","Fab","size","alignSelf","current","hidden","Drawer","anchor","disableScrollLock","float","ListItem","ListItemButton","ListItemIcon","ListItemText","primary","onChangeIndex","zIndex","right","lightPalette","darkPalette","main","dark","contrastText","App","themeMode","useMemo","createTheme","palette","mode","path","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","combineReducers","state","action","dataNoRepeat","filter","ReactDOM","render","createStore","reducers","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb5c0999.chunk.js","sourcesContent":["export const AddData = data => ({\r\n    type: \"AddData\",\r\n    payload: data\r\n});\r\n\r\nexport const UpdateData = data => ({\r\n    type: \"UpdateData\",\r\n    payload: data\r\n});\r\n\r\nexport const DeleteData = data => ({\r\n    type: \"DeleteData\",\r\n    id: data\r\n});\r\n\r\nexport const UpdateResumeData = data => ({\r\n    type: \"UpdateResumeData\",\r\n    payload: data\r\n});\r\n\r\nexport const SwitchTheme = () => ({\r\n    type: \"SwitchTheme\"\r\n});\r\n","export const LEDGER_REFS = [\r\n    \"Adiantamento a Fornecedor\", \r\n    \"Adiantamentos a Funcionários\", \r\n    \"Água\", \r\n    \"Aluguel\", \r\n    \"Assinaturas de Revistas\", \r\n    \"Assinaturas e Anuidades a Pagar\", \r\n    \"Bancos\", \r\n    \"Bancos conta Movimento\", \r\n    \"Caixa\", \r\n    \"Capital Social\", \r\n    \"Clientes\", \r\n    \"Clientes (LP)\", \r\n    \"Cofins\", \r\n    \"Comissões sobre Vendas\", \r\n    \"Computadores e Periféricos\", \r\n    \"Correio\", \r\n    \"CSLL\", \r\n    \"Custos das Mercadorias Vendidas\", \r\n    \"Depreciação\", \r\n    \"Depreciação Acumulada\", \r\n    \"Despesas Financeiras\", \r\n    \"Devolução de Vendas\", \r\n    \"Empréstimos Bancários\", \r\n    \"Energia Elétrica\", \r\n    \"Equipamentos Telefônicos\", \r\n    \"Fornecedores\", \r\n    \"Ganhos na Alienação do Imobilizado\", \r\n    \"ICMS sobre Vendas\", \r\n    \"IRPJ\", \r\n    \"IRPJ - Adicional\", \r\n    \"Lucro ou Prejuízo Acumulado\", \r\n    \"Manutenção e Reparos\", \r\n    \"Máquinas e Equipamentos\", \r\n    \"Material de Escritório\", \r\n    \"Mercadoria para Revenda\", \r\n    \"Móveis e Utensílios\", \r\n    \"Participação em Fundos de Investimentos\", \r\n    \"Perdas na Alienação do Imobilizado\", \r\n    \"Pesquisa e Desenvolvimento de Produtos\", \r\n    \"Pis\", \r\n    \"Poupança\", \r\n    \"Prédios\", \r\n    \"Prédios em Construção\", \r\n    \"Pró-Labore\", \r\n    \"Propaganda e Publicidade\", \r\n    \"Receita Financeiras\", \r\n    \"Refeições e Lanches\", \r\n    \"Reservas de Capital\", \r\n    \"Reservas de Lucro\", \r\n    \"Reservas de Reavaliação\", \r\n    \"Revistas e Publicações\", \r\n    \"Salários à Pagar\", \r\n    \"Salários e Ordenados\", \r\n    \"Seguros\", \r\n    \"Seguros à Pagar\", \r\n    \"Seguros à Vencer\", \r\n    \"Telefone\", \r\n    \"Terrenos\", \r\n    \"Títulos à Receber\", \r\n    \"Transporte de Pessoal\", \r\n    \"Valor Líquido de Bens Baixado\", \r\n    \"Veículos\", \r\n    \"Venda\", \r\n    \"Vendas Canceladas\"\r\n];\r\n\r\nexport const BPDRE_OBJ = {\r\n    ativo: {\r\n        circulante: {\r\n            key: \"Circulante\",\r\n            disponivel: [\r\n                {key: \"caixa\", value: \"Caixa\"},\r\n                {key: \"bancos\", value: \"Bancos\"}\r\n            ],\r\n            creditos: [\r\n                {key: \"clientes\", value: \"Clientes\"}\r\n            ]\r\n        }\r\n    }\r\n};","import { Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { LEDGER_REFS } from \"../../../../data\";\r\nimport { UpdateData } from \"../../../../actions/AppActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Modal = props => {\r\n\r\n    const {\r\n        onClose = () => {},\r\n        id,\r\n        item = \"\",\r\n        registerType = \"\",\r\n        ledgerType = \"\",\r\n        debt = \"\",\r\n        credit = \"\",\r\n        ...other\r\n    } = props;\r\n\r\n    const [_id, SetId] = useState(id);\r\n    const [_item, SetItem] = useState(item);\r\n    const [_registerType, SetRegisterType] = useState(registerType);\r\n    const [_ledgerType, SetLedgerType] = useState(ledgerType);\r\n    const [_debt, SetDebt] = useState(debt);\r\n    const [_credit, SetCredit] = useState(credit);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const UpdateRow = () => {\r\n        let toUpdateData = {\r\n            item: _item,\r\n            registerType: _registerType,\r\n            ledgerType: _ledgerType,\r\n            debt: _debt,\r\n            credit: _credit,\r\n            id: _id\r\n        };\r\n        dispatch(UpdateData(toUpdateData));\r\n        onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(_item);\r\n        // console.log(item)\r\n    })\r\n\r\n    return (\r\n        <Dialog\r\n            {...other}\r\n            onBackdropClick={onClose}\r\n            onClose={onClose}\r\n        >\r\n            <DialogTitle>Editando lançamento</DialogTitle>\r\n            <DialogContent \r\n                className=\"flex fdcolumn\"\r\n                sx={{\r\n                    minWidth: \"450px\"\r\n                }}\r\n            >\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    label=\"Item\"\r\n                    value={_item}\r\n                    onChange={e => SetItem(e.target.value)}\r\n                />\r\n\r\n                <FormControl variant=\"filled\" sx={{ minWidth: 120 }}>\r\n                    <InputLabel>D/C</InputLabel>\r\n                    <Select\r\n                        value={_registerType}\r\n                        onChange={e => SetRegisterType(e.target.value)}\r\n                    >\r\n                        <MenuItem value=\"\">Nenhum</MenuItem>\r\n                        <MenuItem value=\"D\">D</MenuItem>\r\n                        <MenuItem value=\"C\">C</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl variant=\"filled\" sx={{ minWidth: 240 }}>\r\n                    <InputLabel>Conta Contábil</InputLabel>\r\n                    <Select\r\n                        value={_ledgerType}\r\n                        onChange={e => SetLedgerType(e.target.value)}\r\n                    >\r\n                        <MenuItem>Nenhum</MenuItem>\r\n                        {LEDGER_REFS.map((value, index) => (\r\n                            <MenuItem \r\n                                key={index}\r\n                                id={`ledger-ref-${index}`}\r\n                                value={value}\r\n                            >{value}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    value={_debt}\r\n                    label=\"Débito\"\r\n                    onChange={e => SetDebt(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    label=\"Crédito\"\r\n                    value={_credit}\r\n                    onChange={e => SetCredit(e.target.value)}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"error\"\r\n                    onClick={onClose}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={UpdateRow}\r\n                >\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FormControl, IconButton, InputLabel, MenuItem, Select, TableCell, TableRow, TextField } from \"@mui/material\";\r\nimport { DeleteData } from \"../../../actions/AppActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Modal from \"./Modal\";\r\n\r\nconst Board = props => {\r\n\r\n    const {\r\n        id,\r\n        item,\r\n        registerType,\r\n        ledgerType,\r\n        debt,\r\n        credit,\r\n        onChange\r\n    } = props;\r\n\r\n    // const [item, SetItem] = useState(\"\");\r\n    // const [registerType, SetRegisterType] = useState(\"\");\r\n    // const [ledgerType, SetLedgerType] = useState(\"\");\r\n    // const [debt, SetDebt] = useState(\"\");\r\n    // const [credit, SetCredit] = useState(\"\");\r\n    const [modal, SetModal] = useState(false);\r\n\r\n    // const INITIAL_RENDER_FLAG = useRef(true);\r\n\r\n    const dispatch = useDispatch();\r\n    // const location = useLocation();\r\n\r\n    // const currentTab = useRef(new URLSearchParams(location.search).get(\"tab\"));\r\n\r\n    // useEffect(() => {\r\n    //     if (INITIAL_RENDER_FLAG.current) {\r\n    //         INITIAL_RENDER_FLAG.current = false;\r\n    //         return;\r\n    //     }\r\n\r\n    //     if (currentTab.current == 0 && ledgerType && (debt || credit)) {\r\n    //         let data = {\r\n    //             item: item,\r\n    //             registerType: registerType,\r\n    //             ledgerType: ledgerType,\r\n    //             debt: debt,\r\n    //             credit: credit,\r\n    //             id: id\r\n    //         };\r\n    //         dispatch(UpdateData(data));\r\n    //     }\r\n\r\n    //     currentTab.current = new URLSearchParams(location.search).get(\"tab\");\r\n    // }, [location]);\r\n\r\n    return (\r\n        <TableRow id={id}>\r\n            <TableCell>{item}</TableCell>\r\n            <TableCell>{registerType}</TableCell>\r\n            <TableCell>{ledgerType}</TableCell>\r\n            <TableCell>{debt}</TableCell>\r\n            <TableCell>{credit}</TableCell>\r\n            <TableCell style={{verticalAlign: \"middle\"}}>\r\n                <Modal\r\n                    open={modal}\r\n                    onClose={() => SetModal(false)}\r\n                    id={id}\r\n                    item={item}\r\n                    registerType={registerType}\r\n                    ledgerType={ledgerType}\r\n                    debt={debt}\r\n                    credit={credit}\r\n                />\r\n                <IconButton \r\n                    color=\"info\"\r\n                    onClick={() => SetModal(true)}\r\n                >\r\n                    <EditIcon/>    \r\n                </IconButton>\r\n                <IconButton \r\n                    color=\"error\"\r\n                    onClick={() => dispatch(DeleteData(id))}\r\n                >\r\n                    <DeleteIcon/>    \r\n                </IconButton>\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default Board;","import { Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField, Button } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { LEDGER_REFS } from \"../../../data\";\r\nimport { AddData } from \"../../../actions/AppActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Modal = props => {\r\n\r\n    const {\r\n        onClose = () => {},\r\n        ...other\r\n    } = props;\r\n\r\n    const [item, SetItem] = useState(\"\");\r\n    const [registerType, SetRegisterType] = useState(\"\");\r\n    const [ledgerType, SetLedgerType] = useState(\"\");\r\n    const [debt, SetDebt] = useState(\"\");\r\n    const [credit, SetCredit] = useState(\"\");\r\n    const [boardCount, SetBoardCount] = useState(0);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const AddRow = () => {\r\n        let toAddData = {\r\n            item: item,\r\n            registerType: registerType,\r\n            ledgerType: ledgerType,\r\n            debt: debt,\r\n            credit: credit,\r\n            id: boardCount\r\n        };\r\n        dispatch(AddData(toAddData));\r\n        SetBoardCount(boardCount + 1);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            {...other}\r\n            onBackdropClick={onClose}\r\n            onClose={onClose}\r\n        >\r\n            <DialogTitle>Adicionar lançamento</DialogTitle>\r\n            <DialogContent \r\n                className=\"flex fdcolumn\"\r\n                sx={{\r\n                    minWidth: \"450px\"\r\n                }}\r\n            >\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    label=\"Item\"\r\n                    value={item}\r\n                    onChange={e => SetItem(e.target.value)}\r\n                />\r\n\r\n                <FormControl variant=\"filled\" sx={{ minWidth: 120 }}>\r\n                    <InputLabel>D/C</InputLabel>\r\n                    <Select\r\n                        value={registerType}\r\n                        onChange={e => SetRegisterType(e.target.value)}\r\n                    >\r\n                        <MenuItem value=\"\">Nenhum</MenuItem>\r\n                        <MenuItem value=\"D\">D</MenuItem>\r\n                        <MenuItem value=\"C\">C</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl variant=\"filled\" sx={{ minWidth: 240 }}>\r\n                    <InputLabel>Conta Contábil</InputLabel>\r\n                    <Select\r\n                        value={ledgerType}\r\n                        onChange={e => SetLedgerType(e.target.value)}\r\n                    >\r\n                        <MenuItem>Nenhum</MenuItem>\r\n                        {LEDGER_REFS.map((value, index) => (\r\n                            <MenuItem \r\n                                key={index}\r\n                                id={`ledger-ref-${index}`}\r\n                                value={value}\r\n                            >{value}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    value={debt}\r\n                    label=\"Débito\"\r\n                    onChange={e => SetDebt(e.target.value)}\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    label=\"Crédito\"\r\n                    value={credit}\r\n                    onChange={e => SetCredit(e.target.value)}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"error\"\r\n                    onClick={onClose}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={AddRow}\r\n                >\r\n                    Confirmar\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, { useEffect, useImperativeHandle, useState } from \"react\";\r\nimport { IconButton, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Table as MaterialTable } from \"@mui/material\";\r\nimport Board from \"../Board\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"../Modal\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n  \r\nconst columns = [\r\n    {\r\n        field: \"id\",\r\n        headerName: \"ID\"\r\n    },\r\n    {\r\n        field: \"item\",\r\n        headerName: \"Item\"\r\n    },\r\n    {\r\n        field: \"registerType\",\r\n        headerName: \"D/C\"\r\n    },\r\n    {\r\n        field: \"ledgerType\",\r\n        headerName: \"Conta contábil\"\r\n    },\r\n    {\r\n        field: \"debt\",\r\n        headerName: \"Débito\"\r\n    },\r\n    {\r\n        field: \"credit\",\r\n        headerName: \"Crédito\"\r\n    },\r\n    {\r\n        field: \"actions\",\r\n        headerName: \"\"\r\n    }\r\n];\r\n\r\nconst Table = React.forwardRef((props, ref) => {\r\n\r\n    const [boardCount, SetBoardCount] = useState(0);\r\n    const [boardList, SetBoardList] = useState([]);\r\n\r\n    const [modal, SetModal] = useState(false);\r\n    const [rows, SetRows] = useState([]);\r\n\r\n    const data = useSelector(store => store.AppReducer.data);\r\n    const dispatch = useDispatch();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        OpenModal: () => {\r\n            OpenModal();\r\n        }\r\n    }));\r\n\r\n    const OpenModal = () => {\r\n        SetModal(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let elements = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            elements.push(<Board\r\n                key={data[i]?.id}\r\n                id={data[i]?.id}\r\n                item={data[i]?.item}\r\n                registerType={data[i]?.registerType}\r\n                ledgerType={data[i]?.ledgerType}\r\n                debt={data[i]?.debt}\r\n                credit={data[i]?.credit}\r\n            />);\r\n        }\r\n        SetBoardList(...[elements]);\r\n        // let tempRows = [];\r\n        // for (let i = 0; i < data.length; i++) {\r\n        //     tempRows.push({\r\n        //         id: data[i]?.id,\r\n        //         item: data[i]?.item,\r\n        //         registerType: data[i]?.registerType,\r\n        //         ledgerType: data[i]?.ledgerType,\r\n        //         debt: data[i]?.debt,\r\n        //         credit: data[i]?.credit,\r\n        //         actions: <IconButton>t</IconButton>\r\n        //     });\r\n        // }\r\n        // console.log(data)\r\n        // console.log(tempRows);\r\n        // SetRows(...[tempRows]);\r\n    }, [data])\r\n\r\n    return (\r\n        <div style={{ height: \"400px\", width: \"100%\" }}>\r\n            <Modal \r\n                open={modal}\r\n                onClose={() => SetModal(false)}\r\n            />\r\n            <TableContainer component={Paper}>\r\n                <MaterialTable>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Item</TableCell>\r\n                            <TableCell>D/C</TableCell>\r\n                            <TableCell>Conta contábil</TableCell>\r\n                            <TableCell>Débito</TableCell>\r\n                            <TableCell>Crédito</TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {boardList}\r\n                    </TableBody>\r\n                </MaterialTable>\r\n            </TableContainer>\r\n            {/* <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n            /> */}\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Table;","import React, { useState } from \"react\";\r\nimport Table from \"./Table\";\r\n\r\nconst Launches = React.forwardRef((props, ref) => {\r\n\r\n    return (\r\n        <div className=\"launches\">\r\n            <Table\r\n                ref={ref}\r\n            />\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Launches;","import React, { useState } from \"react\";\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Card as MaterialCard, Typography, Collapse, CardActions, IconButton } from \"@mui/material\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n\r\nimport \"./index.css\";\r\n\r\nconst Card = props => {\r\n\r\n    const {\r\n        title,\r\n        debts = [],\r\n        credits = [],\r\n        item\r\n    } = props;\r\n\r\n    const [expanded, SetExpanded] = useState(false);\r\n\r\n    return (\r\n        <MaterialCard \r\n            raised\r\n            style={{\r\n                padding: \"5px\"\r\n            }}\r\n        >\r\n            <Typography align=\"center\" variant=\"button\" component=\"div\" style={{ fontSize: \"20px\", fontWeight: 700, padding: \"5px\" }}>{title}</Typography>\r\n            <CardActions style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                <IconButton onClick={() => SetExpanded(!expanded)}>\r\n                    {expanded ? <ExpandLessIcon/> : <ExpandMoreIcon/>}\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\">\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell></TableCell>\r\n                                <TableCell>Débito</TableCell>\r\n                                <TableCell>Crédito</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {debts?.map((value, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell>{value}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            {credits?.map((value, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell>{value}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                            <TableRow>\r\n                                <TableCell>Soma</TableCell>\r\n                                <TableCell>{(() => {\r\n                                    let sum = 0;\r\n                                    for (let i = 0; i < debts.length; i++) sum += debts[i];\r\n                                    return sum;\r\n                                })()}</TableCell>\r\n                                <TableCell>{(() => {\r\n                                    let sum = 0;\r\n                                    for (let i = 0; i < credits.length; i++) sum += credits[i];\r\n                                    return sum;\r\n                                })()}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Saldo</TableCell>\r\n                                <TableCell className=\"text-primary\">{(() => {\r\n                                    let sum = 0;\r\n                                    for (let i = 0; i < debts.length; i++) sum += debts[i];\r\n                                    for (let i = 0; i < credits.length; i++) sum -= credits[i];\r\n                                    return sum >= 0 && sum;\r\n                                })()}</TableCell>\r\n                                <TableCell className=\"text-danger\">{(() => {\r\n                                    let sum = 0;\r\n                                    for (let i = 0; i < debts.length; i++) sum += debts[i];\r\n                                    for (let i = 0; i < credits.length; i++) sum -= credits[i];\r\n                                    return sum < 0 && sum;\r\n                                })()}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Collapse>\r\n        </MaterialCard>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Card from \"./Card\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Reasons = () => {\r\n\r\n    const [reasonList, SetReasonList] = useState({});\r\n\r\n    const data = useSelector(store => store.AppReducer.data);\r\n\r\n    useEffect(() => {\r\n        let tempReasonsList = {};\r\n        data.map(x => {\r\n            if (!x?.ledgerType) return;\r\n            let debts = [];\r\n            let credits = [];\r\n            \r\n            if (tempReasonsList[x?.ledgerType]?.debts) debts.push(...tempReasonsList[x?.ledgerType]?.debts);\r\n            if (tempReasonsList[x?.ledgerType]?.credits) credits.push(...tempReasonsList[x?.ledgerType]?.credits);\r\n\r\n            if (!isNaN(parseFloat(x?.debt))) debts.push(parseFloat(x?.debt));\r\n            if (!isNaN(parseFloat(x?.credit))) credits.push(parseFloat(x?.credit));\r\n            tempReasonsList[x?.ledgerType] = {\r\n                debts: debts,\r\n                credits: credits\r\n            }\r\n        });\r\n        SetReasonList(tempReasonsList);\r\n    }, [data]);\r\n\r\n    return (\r\n        <div className=\"reason\">\r\n            <div className=\"reason-cards-list\">\r\n                {(() => {\r\n                    let cards = [];\r\n                    for (const [key, value] of Object.entries(reasonList)) {\r\n                        cards.push(<Card\r\n                            title={key}\r\n                            debts={value.debts}\r\n                            credits={value.credits}\r\n                            key={key}\r\n                        />);\r\n                    }\r\n                    return cards;\r\n                })()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reasons;","import { Tooltip, Typography } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Container = props => {\r\n\r\n    const {\r\n        title,\r\n        children = [],\r\n        value,\r\n        ...other\r\n    } = props;\r\n\r\n    return (\r\n        <div \r\n            className=\"bpdre-group\"\r\n        >\r\n            <div className=\"bpdre-row jcsb\">\r\n                <Typography\r\n                    style={{\r\n                        fontWeight: children.length == 0 ? 0 : 700,\r\n                        fontSize: children.length == 0 ? \"14px\" : \"18px\"\r\n                    }}\r\n                    variant=\"button\"\r\n                >\r\n                    {title}\r\n                </Typography>\r\n                <Tooltip\r\n                    title={`Valor de ${title}`}\r\n                    placement=\"left\"\r\n                    arrow\r\n                >\r\n                    <div className=\"bpdre-value text-center\">\r\n                        {value}\r\n                    </div>\r\n                </Tooltip>\r\n            </div>\r\n            <div className=\"bpdre-children\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"../../Container\";\r\nimport { LEDGER_REFS, BPDRE_OBJ } from \"../../../../data\";\r\nimport { UpdateResumeData } from \"../../../../actions/AppActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Active = props => {\r\n\r\n    const {\r\n        reasonList\r\n    } = props;\r\n\r\n    const [list, SetList] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let data = {\r\n            caixa: reasonList[\"Caixa\"] ? reasonList[\"Caixa\"]?.balance : 0,\r\n            bancos: reasonList[\"Bancos\"] ? reasonList[\"Bancos\"]?.balance : 0,\r\n            clientes: reasonList[\"Clientes\"] ? reasonList[\"Clientes\"]?.balance : 0,\r\n            poupanca: reasonList[\"Poupança\"] ? reasonList[\"Poupança\"]?.balance : 0,\r\n            adiantamentosFuncionarios: reasonList[\"Adiantamentos a Funcionários\"] ? reasonList[\"Adiantamentos a Funcionários\"]?.balance : 0,\r\n            adiantamentosFornecedor: reasonList[\"Adiantamentos a Fornecedor\"]?.balance ?? 0,\r\n            mercadoriaRevenda: reasonList[\"Mercadoria pra Revenda\"]?.balance ?? 0,\r\n            segurosVencer: reasonList[\"Seguros à Vencer\"]?.balance ?? 0,\r\n            assinaturasRevistas: reasonList[\"Assinaturas de Revistas\"]?.balance ?? 0,\r\n            titulosReceber: reasonList[\"Títulos à Receber\"]?.balance ?? 0,\r\n            clientesLP: reasonList[\"Clientes (LP)\"]?.balance ?? 0,\r\n            participacaoFundoInvestimentos: reasonList[\"Participação em Fundos de Investimentos\"]?.balance ?? 0,\r\n            computadoresPerifericos: reasonList[\"Computadores e Periféricos\"]?.balance ?? 0,\r\n            equipamentosTelefonicos: reasonList[\"Equipamentos Telefônicos\"]?.balance ?? 0,\r\n            maquinasEquipamentos: reasonList[\"Máquinas e Equipamentos\"]?.balance ?? 0,\r\n            moveisUtensilios: reasonList[\"Móveis e Utensílios\"]?.balance ?? 0,\r\n            predios: reasonList[\"Prédios\"]?.balance ?? 0,\r\n            prediosConstrucao: reasonList[\"Prédios em Construção\"]?.balance ?? 0,\r\n            terrenos: reasonList[\"Terrenos\"]?.balance ?? 0,\r\n            veiculos: reasonList[\"Veículos\"]?.balance ?? 0,\r\n            depreciacaoAcumulada: reasonList[\"Depreciação Acumulada\"]?.balance ?? 0,\r\n            pesquisaDevProdutos: reasonList[\"Pesquisa e Desenvolvimento de Produtos\"]?.balance ?? 0,\r\n        };\r\n\r\n        Object.assign(data, {\r\n            disponivel: data.caixa + data.bancos,\r\n            creditos: data.clientes + data.poupanca + data.adiantamentosFuncionarios + data.adiantamentosFornecedor,\r\n            estoques: data.mercadoriaRevenda,\r\n            despesasAntecipadas: data.segurosVencer + data.assinaturasRevistas,\r\n            outrosValBens: data.titulosReceber,\r\n            realizavelLongoPrazo: data.clientesLP,\r\n            investimentos: data.participacaoFundoInvestimentos,\r\n            imobilizado: data.computadoresPerifericos + data.equipamentosTelefonicos + data.maquinasEquipamentos + data.moveisUtensilios + data.predios + data.prediosConstrucao + data.terrenos + data.veiculos + data.depreciacaoAcumulada,\r\n            intangivel: data.pesquisaDevProdutos\r\n        });\r\n\r\n        Object.assign(data, {\r\n            circulante: data.disponivel + data.creditos + data.estoques + data.despesasAntecipadas + data.outrosValBens,\r\n            naoCirculantes: data.realizavelLongoPrazo + data.investimentos + data.imobilizado + data.intangivel\r\n        });\r\n\r\n        Object.assign(data, {\r\n            ativo: data.circulante + data.naoCirculantes\r\n        });\r\n\r\n        dispatch(UpdateResumeData({\r\n            ativo: data.ativo,\r\n            ativoCirculante: data.circulante,\r\n            ativoImobilizado: data.naoCirculantes\r\n        }));\r\n\r\n        SetList(...[data]);\r\n    }, [reasonList]);\r\n\r\n    return (\r\n        <Container title=\"ATIVO\" value={list.ativo}>\r\n            <Container title=\"CIRCULANTE\" value={list.circulante}>\r\n                <Container title=\"DISPONÍVEL\" value={list.disponivel}>\r\n                    <Container title=\"Caixa\" value={list.caixa}></Container>\r\n                    <Container title=\"Bancos\" value={list.bancos}></Container>\r\n                </Container>\r\n                <Container title=\"CRÉDITOS\" value={list.creditos}>\r\n                    <Container title=\"Clientes\" value={list.clientes}></Container>\r\n                    <Container title=\"Poupança\" value={list.poupanca}></Container>\r\n                    <Container title=\"Adiantamentos a Funcionários\" value={list.adiantamentosFuncionarios}></Container>\r\n                    <Container title=\"Adiantamentos a Fornecedor\" value={list.adiantamentosFornecedor}></Container>\r\n                </Container>\r\n                <Container title=\"ESTOQUES\" value={list.estoques}>\r\n                    <Container title=\"Mercadoria pra Revenda\" value={list.mercadoriaRevenda}></Container>\r\n                </Container>\r\n                <Container title=\"DESPESAS ANTECIPADAS\" value={list.despesasAntecipadas}>\r\n                    <Container title=\"Seguros à Vencer\" value={list.segurosVencer}></Container>\r\n                    <Container title=\"Assinaturas de Revistas\" value={list.assinaturasRevistas}></Container>\r\n                </Container>\r\n                <Container title=\"OUTROS VALORES E BENS\" value={list.outrosValBens}>\r\n                    <Container title=\"Títulos à Receber\" value={list.titulosReceber}></Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"NÃO CIRCULANTE\" value={list.naoCirculantes}>\r\n                <Container title=\"REALIZÁVEL À LONGO PRAZO\" value={list.realizavelLongoPrazo}>\r\n                    <Container title=\"Clientes (LP)\" value={list.clientesLP}></Container>\r\n                </Container>\r\n                <Container title=\"INVESTIMENTOS\" value={list.investimentos}>\r\n                    <Container title=\"Participação em Fundos de Investimentos\" value={list.participacaoFundoInvestimentos}></Container>\r\n                </Container>\r\n                <Container title=\"IMOBILIZADO\" value={list.imobilizado}>\r\n                    <Container title=\"Computadores e Periféricos\" value={list.computadoresPerifericos}></Container>\r\n                    <Container title=\"Equipamentos Telefônicos\" value={list.equipamentosTelefonicos}></Container>\r\n                    <Container title=\"Máquinas e Equipamentos\" value={list.maquinasEquipamentos}></Container>\r\n                    <Container title=\"Móveis e Utensílios\" value={list.moveisUtensilios}></Container>\r\n                    <Container title=\"Prédios\" value={list.predios}></Container>\r\n                    <Container title=\"Prédios em Construção\" value={list.prediosConstrucao}></Container>\r\n                    <Container title=\"Terrenos\" value={list.terrenos}></Container>\r\n                    <Container title=\"Veículos\" value={list.veiculos}></Container>\r\n                    <Container title=\"Depreciação Acumulada\" value={list.depreciacaoAcumulada}></Container>\r\n                </Container>\r\n                <Container title=\"INTANGÍVEL\" value={list.intangivel}>\r\n                    <Container title=\"Pesquisa e Desenvolvimento de Produtos\" value={list.pesquisaDevProdutos}></Container>\r\n                </Container>\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Active;","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"../../Container\";\r\nimport { UpdateResumeData } from \"../../../../actions/AppActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Passive = props => {\r\n\r\n    const {\r\n        reasonList\r\n    } = props;\r\n\r\n    const [list, SetList] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let data = {\r\n            salPagar: reasonList[\"Salários à Pagar\"]?.balance ?? 0,\r\n            fornecedores: reasonList[\"Fornecedores\"]?.balance ?? 0,\r\n            bancosMovimento: reasonList[\"Bancos conta Movimento\"]?.balance ?? 0,\r\n            emprestimosBancarios: reasonList[\"Empréstimos Bancários\"]?.balance ?? 0,\r\n            assinaturasAnuidade: reasonList[\"Assinaturas e Anuidades a Pagar\"]?.balance ?? 0,\r\n            segurosPagar: reasonList[\"Seguros à Pagar\"]?.balance ?? 0,\r\n            capitalSocial: reasonList[\"Capital Social\"]?.balance ?? 0,\r\n            reservasCapital: reasonList[\"Reservas de Capital\"]?.balance ?? 0,\r\n            reservasReavaliacao: reasonList[\"Reservas de Reavaliação\"]?.balance ?? 0,\r\n            reservasLucro: reasonList[\"Reservas de Lucro\"]?.balance ?? 0,\r\n            lucroPrejuizoAcumulado: reasonList[\"Lucro ou Prejuízo Acumulado\"]?.balance ?? 0,\r\n            lucroPrejuizoExercicio: reasonList[\"Lucro ou Prejuízo do Exercício\"]?.balance ?? 0,\r\n        };\r\n\r\n        Object.assign(data, {\r\n            obrigacoes: data.salPagar + data.fornecedores + data.bancosMovimento + data.emprestimosBancarios + data.assinaturasAnuidade + data.segurosPagar,\r\n            obrigacoesLongoPrazo: data.emprestimosBancarios,\r\n            capital: data.capitalSocial,\r\n            reservas: data.reservasCapital + data.reservasLucro + data.reservasReavaliacao,\r\n            lucroPrejuizo: data.lucroPrejuizoAcumulado + data.lucroPrejuizoExercicio\r\n        });\r\n\r\n        Object.assign(data, {\r\n            circulante: data.obrigacoes,\r\n            naoCirculante: data.obrigacoesLongoPrazo,\r\n            patrimonioLiquido: data.capital + data.reservas + data.lucroPrejuizo\r\n        });\r\n\r\n        Object.assign(data, {\r\n            passive: data.circulante + data.naoCirculante + data.patrimonioLiquido\r\n        });\r\n\r\n        dispatch(UpdateResumeData({\r\n            passivo: data.passive,\r\n            passivoCirculante: data.circulante,\r\n            patrimonioLiquido: data.patrimonioLiquido\r\n        }));\r\n\r\n        SetList(...[data]);\r\n    }, [reasonList]);\r\n\r\n    return (\r\n        <Container title=\"PASSIVO\" value={list.passive}>\r\n            <Container title=\"CIRCULANTE\" value={list.circulante}>\r\n                <Container title=\"OBRIGAÇÕES\" value={list.obrigacoes}>\r\n                    <Container title=\"Salários à Pagar\" value={list.salPagar}></Container>\r\n                    <Container title=\"Fornecedores\" value={list.fornecedores}></Container>\r\n                    <Container title=\"Bancos conta Movimento\" value={list.bancosMovimento}></Container>\r\n                    <Container title=\"Empréstimos Bancários\" value={list.emprestimosBancarios}></Container>\r\n                    <Container title=\"Assinaturas e Anuidades a Pagar\" value={list.assinaturasAnuidade}></Container>\r\n                    <Container title=\"Seguros à Pagar\" value={list.segurosPagar}></Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"NÃO CIRCULANTE\" value={list.naoCirculante}>\r\n                <Container title=\"OBRIGAÇÕES DE LONGO PRAZO\" value={list.obrigacoesLongoPrazo}>\r\n                    <Container title=\"Empréstimos Bancários\" value={list.emprestimosBancarios}/>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"PATRIMÔNIO LÍQUIDO\" value={list.patrimonioLiquido}>\r\n                <Container title=\"CAPITAL\" value={list.capital}>\r\n                    <Container title=\"Capital Social\" value={list.capitalSocial}/>\r\n                </Container>\r\n                <Container title=\"RESERVAS\" value={list.reservas}>\r\n                    <Container title=\"Reservas de Capital\" value={list.reservasCapital}/>\r\n                    <Container title=\"Reservas de Reavaliação\" value={list.reservasReavaliacao}/>\r\n                    <Container title=\"Reservas de Lucro\" value={list.reservasLucro}/>\r\n                </Container>\r\n                <Container title=\"LUCRO OU PREJUÍZO\" value={list.lucroPrejuizo}>\r\n                    <Container title=\"Lucro ou Prejuízo Acumulado\" value={list.lucroPrejuizoAcumulado}/>\r\n                    <Container title=\"Lucro ou Prejuízo do Exercício\" value={list.lucroPrejuizoExercicio}/>\r\n                </Container>\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Passive;","import React, { useEffect, useState } from \"react\";\r\nimport Container from \"../../Container\";\r\nimport { UpdateResumeData } from \"../../../../actions/AppActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Results = props => {\r\n\r\n    const {\r\n        reasonList\r\n    } = props;\r\n\r\n    const [list, SetList] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let data = {\r\n            venda: reasonList[\"Venda\"]?.balance ?? 0,\r\n            icmsVendas: reasonList[\"ICMS sobre Vendas\"]?.balance ?? 0,\r\n            cofins: reasonList[\"Cofins\"]?.balance ?? 0,\r\n            pis: reasonList[\"Pis\"]?.balance ?? 0,\r\n            vendasCaneladas: reasonList[\"Vendas Caneladas\"]?.balance ?? 0,\r\n            devolucaoVendas: reasonList[\"Devolução de Vendas\"]?.balance ?? 0,\r\n            custosMercadoriasVendidas: reasonList[\"Custos das Mercadorias Vendidas\"]?.balance ?? 0,\r\n            comissoesVendas: reasonList[\"Comissões sobre Vendas\"]?.balance ?? 0,\r\n            propagandaPublicidade: reasonList[\"Propaganda e Publicidade\"]?.balance ?? 0,\r\n            salariosOrdenados: reasonList[\"Salários e Ordenados\"]?.balance ?? 0,\r\n            aluguel: reasonList[\"Aluguel\"]?.balance ?? 0,\r\n            depreciacao: reasonList[\"Depreciação\"]?.balance ?? 0,\r\n            manutencaoReparos: reasonList[\"Manutenção e Reparos\"]?.balance ?? 0,\r\n            agua: reasonList[\"Água\"]?.balance ?? 0,\r\n            correio: reasonList[\"Correio\"]?.balance ?? 0,\r\n            energiaEletrica: reasonList[\"Energia Elétrica\"]?.balance ?? 0,\r\n            seguros: reasonList[\"Seguros\"]?.balance ?? 0,\r\n            telefone: reasonList[\"Telefone\"]?.balance ?? 0,\r\n            transportePessoal: reasonList[\"Transporte de Pessoal\"]?.balance ?? 0,\r\n            proLabore: reasonList[\"Pró-Labore\"]?.balance ?? 0,\r\n            materialEscritorio: reasonList[\"Material de Escritório\"]?.balance ?? 0,\r\n            refeicoesLanches: reasonList[\"Refeições e Lanches\"]?.balance ?? 0,\r\n            revistasPublicacoes: reasonList[\"Revistas e Publicações\"]?.balance ?? 0,\r\n            despesasFinanceiras: reasonList[\"Despesas Financeiras\"]?.balance ?? 0,\r\n            receitasFinanceiras: reasonList[\"Receitas Financeiras\"]?.balance ?? 0,\r\n            ganhosAlienacaoImobilizado: reasonList[\"Ganhos na Alienação do Imobilizado\"]?.balance ?? 0,\r\n            valorLiquidoBensBaixado: reasonList[\"Valor Líquido de Bens Baixado\"]?.balance ?? 0,\r\n            perdasAlienacaoImobilizado: reasonList[\"Perdas na Alienação do Imobilizado\"]?.balance ?? 0,\r\n            irpj: reasonList[\"IRPJ\"]?.balance ?? 0,\r\n            irpjAdicional: reasonList[\"IRPJ - Adicional\"]?.balance ?? 0,\r\n            csll: reasonList[\"CSLL\"]?.balance ?? 0,\r\n            lucroPrejuizoExercicio: reasonList[\"Lucro ou Prejuízo do Exercício\"]?.balance ?? 0\r\n        };\r\n\r\n        Object.assign(data, {\r\n            receitasOperacionais: data.venda,\r\n            deducoesReceitasVendas: data.icmsVendas + data.cofins + data.pis + data.vendasCaneladas + data.devolucaoVendas,\r\n            custosMercadorias: data.custosMercadoriasVendidas,\r\n            despesasVendas: data.comissoesVendas + data.propagandaPublicidade,\r\n            despesasAdmin: data.salariosOrdenados + data.aluguel + data.depreciacao + data.manutencaoReparos + data.agua + data.correio + data.energiaEletrica + data.seguros + data.telefone + data.transportePessoal + data.proLabore + data.materialEscritorio + data.refeicoesLanches + data.revistasPublicacoes,\r\n            resultadoFinanceiroLiquido: data.despesasFinanceiras + data.receitasFinanceiras,\r\n\r\n            receitasNaoOperacionais: data.ganhosAlienacaoImobilizado + data.valorLiquidoBensBaixado,\r\n            despesasNaoOperacionais: data.perdasAlienacaoImobilizado + data.valorLiquidoBensBaixado,\r\n            impostosContribuicoes: data.irpj + data.irpjAdicional + data.csll,\r\n            resultadoExercicio: data.lucroPrejuizoExercicio\r\n        });\r\n\r\n        Object.assign(data, {\r\n            receitas: data.receitasOperacionais,\r\n            deducoes: data.deducoesReceitasVendas,\r\n            custos: data.custosMercadorias,\r\n            despesas: data.despesasVendas + data.despesasAdmin + data.resultadoFinanceiroLiquido,\r\n            receitasDespesasNaoOperacionais: data.receitasNaoOperacionais + data.despesasNaoOperacionais,\r\n            provisaoImpostosContribuicoes: data.impostosContribuicoes,\r\n            resultado: data.resultadoExercicio\r\n        });\r\n\r\n        Object.assign(data, {\r\n            demonstracaoResultadoExercicio: data.receitas + data.deducoes,\r\n            receitaLiquida: data.custos,\r\n            lucroBruto: data.despesas,\r\n            resultadoOperacional: data.receitasDespesasNaoOperacionais,\r\n            resultadoImpostoRendaContriSocial: data.provisaoImpostosContribuicoes + data.resultado\r\n        });\r\n\r\n        dispatch(UpdateResumeData({\r\n            vendas: data.venda,\r\n            custosMercadoriasVendidas: data.custosMercadoriasVendidas,\r\n            despesas: data.despesas,\r\n            lucroLiquido: data.receitas - data.custo\r\n        }));\r\n\r\n        SetList(...[data]);\r\n    }, [reasonList]);\r\n\r\n    return (\r\n        <div>\r\n            <Container title=\"DEMONSTRAÇÃO DO RESULTADO DO EXERCÍCIO\" value={list.demonstracaoResultadoExercicio}>\r\n                <Container title=\"RECEITAS\" value={list.receitas}>\r\n                    <Container title=\"RECEITAS OPERACIONAIS\" value={list.receitasOperacionais}>\r\n                        <Container title=\"Venda\" value={list.venda}></Container>\r\n                    </Container>\r\n                </Container>\r\n                <Container title=\"DEDUÇÕES\" value={list.deducoes}>\r\n                    <Container title=\"DEDUÇÕES NAS RECEITAS COM VENDAS\" value={list.deducoesReceitasVendas}>\r\n                        <Container title=\"ICMS sobre Vendas\" value={list.icmsVendas}></Container>\r\n                        <Container title=\"Cofins\" value={list.cofins}></Container>\r\n                        <Container title=\"Pis\" value={list.pis}></Container>\r\n                        <Container title=\"Vendas Caneladas\" value={list.vendasCaneladas}></Container>\r\n                        <Container title=\"Devolução de Vendas\" value={list.devolucaoVendas}></Container>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"RECEITA LÍQUIDA\" value={list.receitaLiquida}>\r\n                <Container title=\"CUSTOS\" value={list.custos}>\r\n                    <Container title=\"CUSTOS DAS MERCADORIAS\" value={list.custosMercadorias}>\r\n                        <Container title=\"Custos das Mercadorias Vendidas\" value={list.custosMercadoriasVendidas}></Container>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"LUCRO BRUTO\" value={list.lucroBruto}>\r\n                <Container title=\"DESPESAS\" value={list.despesas}>\r\n                    <Container title=\"DESPESAS COM VENDAS\" value={list.despesasVendas}>\r\n                        <Container title=\"Comissões sobre Vendas\" value={list.comissoesVendas}></Container>\r\n                        <Container title=\"Propaganda e Publicidade\" value={list.propagandaPublicidade}></Container>\r\n                    </Container>\r\n                    <Container title=\"DESPESAS ADMINISTRATIVAS\" value={list.despesasAdmin}>\r\n                        <Container title=\"Salários e Ordenados\" value={list.salariosOrdenados}></Container>\r\n                        <Container title=\"Aluguel\" value={list.aluguel}></Container>\r\n                        <Container title=\"Depreciação\" value={list.depreciacao}></Container>\r\n                        <Container title=\"Manutenção e Reparos\" value={list.manutencaoReparos}></Container>\r\n                        <Container title=\"Água\" value={list.agua}></Container>\r\n                        <Container title=\"Correio\" value={list.correio}></Container>\r\n                        <Container title=\"Energia Elétrica\" value={list.energiaEletrica}></Container>\r\n                        <Container title=\"Seguros\" value={list.seguros}></Container>\r\n                        <Container title=\"Telefone\" value={list.telefone}></Container>\r\n                        <Container title=\"Transporte de Pessoal\" value={list.transportePessoal}></Container>\r\n                        <Container title=\"Pró-Labore\" value={list.proLabore}></Container>\r\n                        <Container title=\"Material de Escritório\" value={list.materialEscritorio}></Container>\r\n                        <Container title=\"Refeições e Lanches\" value={list.refeicoesLanches}></Container>\r\n                        <Container title=\"Revistas e Publicações\" value={list.revistasPublicacoes}></Container>\r\n                    </Container>\r\n                    <Container title=\"RESULTADO FINANCEIRO LÍQUIDO\" value={list.resultadoFinanceiroLiquido}>\r\n                        <Container title=\"Despesas Financeiras\" value={list.despesasFinanceiras}></Container>\r\n                        <Container title=\"Receitas Financeiras\" value={list.receitasFinanceiras}></Container>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"RESULTADO OPERACIONAL\" value={list.resultadoOperacional}>\r\n                <Container title=\"RECEITAS E DESPESAS NÃO OPERACIONAIS\" value={list.receitasDespesasNaoOperacionais}>\r\n                    <Container title=\"RECEITAS NÃO OPERACIONAIS\" value={list.receitasNaoOperacionais}>\r\n                        <Container title=\"Ganhos na Alienação do Imobilizado\" value={list.ganhosAlienacaoImobilizado}></Container>\r\n                        <Container title=\"Valor Líquido de Bens Baixado\" value={list.valorLiquidoBensBaixado}></Container>\r\n                    </Container>\r\n                    <Container title=\"DESPESAS NÃO OPERACIONAIS\" value={list.despesasNaoOperacionais}>\r\n                        <Container title=\"Perdas na Alienação do Imobilizado\" value={list.perdasAlienacaoImobilizado}></Container>\r\n                        <Container title=\"Valor Líquido de Bens Baixado\" value={list.valorLiquidoBensBaixado}></Container>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n            <Container title=\"RESULTADO ANTES DO IMPOSTO DE RENDA E CONTRIBUIÇÃO SOCIAL\" value={list.resultadoImpostoRendaContriSocial}>\r\n                <Container title=\"PROVISÃO PARA IMPOSTOS E CONTRIBUIÇÕES\" value={list.provisaoImpostosContribuicoes}>\r\n                    <Container title=\"IMPOSTOS E CONTRIBUIÇÕES\" value={list.impostosContribuicoes}>\r\n                        <Container title=\"IRPJ\" value={list.irpj}></Container>\r\n                        <Container title=\"IRPJ - Adicional\" value={list.irpjAdicional}></Container>\r\n                        <Container title=\"CSLL\" value={list.csll}></Container>\r\n                    </Container>\r\n                </Container>\r\n                <Container title=\"RESULTADO\" value={list.resultado}>\r\n                    <Container title=\"RESULTADO DO EXERCÍCIO\" value={list.resultadoExercicio}>\r\n                        <Container title=\"Lucro ou Prejuízo do Exercício\" value={list.lucroPrejuizoExercicio}></Container>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Results;","import React from \"react\";\r\nimport { Paper } from \"@mui/material\";\r\nimport Active from \"./Active\";\r\nimport Passive from \"./Passive\";\r\nimport Results from \"./Results\";\r\n\r\nconst List = props => {\r\n\r\n    const {\r\n        reasonList\r\n    } = props;\r\n\r\n    return (\r\n        <Paper\r\n            style={{\r\n                margin: \"10px 5%\",\r\n                padding: \"10px 25px\"\r\n            }}\r\n            elevation={4}\r\n        >\r\n            <Active\r\n                reasonList={reasonList}\r\n            />\r\n            <Passive\r\n                reasonList={reasonList}\r\n            />\r\n            <Results\r\n                reasonList={reasonList}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default List;","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Container from \"./Container\";\r\nimport List from \"./List\";\r\n\r\nconst BPDRE = () => {\r\n\r\n    const [reasonList, SetReasonList] = useState({});\r\n\r\n    const data = useSelector(store => store.AppReducer.data);\r\n\r\n    useEffect(() => {\r\n        let tempReasonsList = {};\r\n        data.map(x => {\r\n            if (!x?.ledgerType) return;\r\n            let debts = [];\r\n            let credits = [];\r\n            \r\n            if (tempReasonsList[x?.ledgerType]?.debts) debts.push(...tempReasonsList[x?.ledgerType]?.debts);\r\n            if (tempReasonsList[x?.ledgerType]?.credits) credits.push(...tempReasonsList[x?.ledgerType]?.credits);\r\n\r\n            if (!isNaN(parseFloat(x?.debt))) debts.push(parseFloat(x?.debt));\r\n            if (!isNaN(parseFloat(x?.credit))) credits.push(parseFloat(x?.credit));\r\n\r\n            let balance = 0;\r\n            for (let i = 0; i < debts.length; i++) balance += debts[i];\r\n            for (let i = 0; i < credits.length; i++) balance -= credits[i];\r\n            tempReasonsList[x?.ledgerType] = {\r\n                debts: debts,\r\n                credits: credits,\r\n                balance: balance\r\n            }\r\n        });\r\n        SetReasonList(tempReasonsList);\r\n    }, [data]);\r\n\r\n    return (\r\n        <div className=\"bpdre-container\">\r\n            <List\r\n                reasonList={reasonList}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BPDRE;","import { useEffect } from \"react\";\r\nimport { Paper } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Resume = () => {\r\n\r\n    const resumeData = useSelector(store => store.AppReducer.resumeData);\r\n\r\n    useEffect(() => console.log(resumeData));\r\n\r\n    return (\r\n        <Paper>\r\n\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Resume;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { AppBar, BottomNavigation, BottomNavigationAction, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, ListItemButton, Tab, Tabs, Toolbar, Paper, Fab } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport Launches from \"./Launches\";\r\nimport Reasons from \"./Reasons\";\r\nimport BPDRE from \"./BPDRE\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\n\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nimport { SwitchTheme } from \"../actions/AppActions\";\r\n\r\nimport \"./index.css\";\r\nimport Resume from \"./Resume\";\r\n\r\nconst MainPage = () => {\r\n\r\n    const [activeTab, SetActiveTab] = useState(0);\r\n    const [drawer, SetDrawer] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const theme = useSelector(store => store.AppReducer.theme);\r\n\r\n    const launchesRef = useRef();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Paper className=\"Menu\">\r\n            <AppBar \r\n                position=\"static\"\r\n            >\r\n                <Toolbar>\r\n                    <IconButton onClick={() => SetDrawer(true)}>\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <div className=\"d-md-block d-none w100\">\r\n                        <Tabs\r\n                            value={activeTab}\r\n                            onChange={(_, value) => {\r\n                                SetActiveTab(value);\r\n                                history.push(`?tab=${value}`);\r\n                            }}\r\n                            sx={{\r\n                                flexGrow: 1\r\n                            }}\r\n                            indicatorColor=\"secondary\"\r\n                            textColor=\"inherit\"\r\n                            variant=\"scrollable\"\r\n                        >\r\n                            <Tab label=\"Lançamentos\"/>\r\n                            <Tab label=\"Razão\"/>\r\n                            <Tab label=\"BP e DRE\"/>\r\n                            <Tab label=\"Resumo\"/>\r\n                        </Tabs>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <AppBar position=\"fixed\" style={{ top: \"auto\", bottom: 0 }}>\r\n                <div className=\"d-md-none d-block\">\r\n                    <BottomNavigation\r\n                        showLabels\r\n                        value={activeTab}\r\n                        onChange={(_, value) => {\r\n                            SetActiveTab(value);\r\n                            history.push(`?tab=${value}`);\r\n                        }}\r\n                        sx={{ width: \"100%\" }}\r\n                    >\r\n                        <BottomNavigationAction label=\"Lançamentos\"/>\r\n                        <BottomNavigationAction label=\"Razão\"/>\r\n                        <Fab\r\n                            size=\"medium\"\r\n                            sx={{ alignSelf: \"center\" }}\r\n                            color=\"primary\"\r\n                            onClick={() => launchesRef.current.OpenModal()}\r\n                            hidden={activeTab !== 0}\r\n                        >\r\n                            <AddIcon/>\r\n                        </Fab>\r\n                        <BottomNavigationAction label=\"BP e DRE\"/>\r\n                        <BottomNavigationAction label=\"Resumo\"/>\r\n                    </BottomNavigation>\r\n                </div>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                anchor=\"left\"\r\n                open={drawer}\r\n                onClose={() => SetDrawer(false)}\r\n                disableScrollLock\r\n            >\r\n                <div style={{ padding: \"10px\" }}>\r\n                    <IconButton onClick={() => dispatch(SwitchTheme())}>\r\n                        {theme === \"dark\" ? <LightModeIcon/> : <DarkModeIcon/>}\r\n                    </IconButton>\r\n                    <IconButton onClick={() => SetDrawer(false)} sx={{ float: \"right\" }}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemButton>\r\n                            <ListItemIcon>\r\n                                <GitHubIcon/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Repositório no github\"/>\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n\r\n            <SwipeableViews\r\n                index={activeTab}\r\n                onChangeIndex={index => SetActiveTab(index)}\r\n            >\r\n                <div className=\"launches\">\r\n                    <Launches\r\n                        ref={launchesRef}\r\n                    />\r\n                </div>\r\n                <div className=\"reasons\">\r\n                    <Reasons/>\r\n                </div>\r\n                <div className=\"bpdre\">\r\n                    <BPDRE/>\r\n                </div>\r\n                <div className=\"resume\">\r\n                    <Resume/>\r\n                </div>\r\n            </SwipeableViews>\r\n\r\n            <Fab\r\n                onClick={() => launchesRef.current.OpenModal()}\r\n                style={{\r\n                    position: \"fixed\",\r\n                    zIndex: 1000,\r\n                    right: \"20px\",\r\n                    bottom: \"20px\"\r\n                }}\r\n                size=\"medium\"\r\n                hidden={activeTab !== 0}\r\n                className=\"d-md-block d-none\"\r\n                color=\"primary\"\r\n            >\r\n                <AddIcon/>\r\n            </Fab>\r\n\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default MainPage;","// import { ThemeProvider } from \"@mui/material\";\n// import { createTheme } from \"@mui/system\";\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport MainPage from \"./pages\";\n\nconst lightPalette = {\n    \n}\n\nconst darkPalette = {\n    primary: {\n        main: \"#4527a0\",\n        dark: \"#311b92\",\n        contrastText: \"#fff\"\n    }\n}\n\nfunction App() {\n\n    const theme = useSelector(store => store.AppReducer.theme);\n\n    const themeMode = React.useMemo(() => createTheme({\n        palette: {\n            mode: theme,\n            ...(theme === \"dark\" ? darkPalette : lightPalette)\n        }\n    }, [theme]));\n\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/\">\n                        <ThemeProvider theme={themeMode}>\n                            <MainPage/>\n                        </ThemeProvider>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\r\n    data: [],\r\n    resumeData: [],\r\n    theme: \"dark\"\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"AddData\": {\r\n            let dataNoRepeat = state.data.filter(x => x?.id !== action.payload?.id);\r\n            \r\n            return {   \r\n                ...state,\r\n                data: [...dataNoRepeat, ...[action.payload]]\r\n            };\r\n        } case \"UpdateData\": {\r\n            let data = state.data.filter(x => x?.id !== action.payload?.id);\r\n\r\n            return {\r\n                ...state,\r\n                data: [...data, ...[action.payload]]\r\n            };\r\n        } case \"DeleteData\": {\r\n            let data = state.data.filter(x => x?.id !== action.id);\r\n            return {\r\n                ...state,\r\n                data: [...data]\r\n            };\r\n        } case \"UpdateResumeData\": {\r\n            let data = Object.assign(state.resumeData, action.payload);\r\n            return {\r\n                ...state,\r\n                resumeData: data\r\n            };\r\n        } case \"SwitchTheme\": {\r\n            if (state.theme === \"dark\") return {\r\n                ...state,\r\n                theme: \"light\"\r\n            };\r\n            else if (state.theme === \"light\") return {\r\n                ...state,\r\n                theme: \"dark\"\r\n            }\r\n        }\r\n        default:\r\n            return {\r\n                ...state\r\n            };\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nexport default combineReducers({\r\n    AppReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport reducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}